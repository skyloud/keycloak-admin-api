/*
Keycloak Admin REST API

This is a REST API reference for the Keycloak Admin REST API.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AccessToken type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessToken{}

// AccessToken struct for AccessToken
type AccessToken struct {
	Jti                 *string                           `json:"jti,omitempty"`
	Exp                 *int64                            `json:"exp,omitempty"`
	Nbf                 *int64                            `json:"nbf,omitempty"`
	Iat                 *int64                            `json:"iat,omitempty"`
	Iss                 *string                           `json:"iss,omitempty"`
	Sub                 *string                           `json:"sub,omitempty"`
	Typ                 *string                           `json:"typ,omitempty"`
	Azp                 *string                           `json:"azp,omitempty"`
	OtherClaims         map[string]map[string]interface{} `json:"otherClaims,omitempty"`
	Nonce               *string                           `json:"nonce,omitempty"`
	AuthTime            *int64                            `json:"auth_time,omitempty"`
	SessionState        *string                           `json:"session_state,omitempty"`
	AtHash              *string                           `json:"at_hash,omitempty"`
	CHash               *string                           `json:"c_hash,omitempty"`
	Name                *string                           `json:"name,omitempty"`
	GivenName           *string                           `json:"given_name,omitempty"`
	FamilyName          *string                           `json:"family_name,omitempty"`
	MiddleName          *string                           `json:"middle_name,omitempty"`
	Nickname            *string                           `json:"nickname,omitempty"`
	PreferredUsername   *string                           `json:"preferred_username,omitempty"`
	Profile             *string                           `json:"profile,omitempty"`
	Picture             *string                           `json:"picture,omitempty"`
	Website             *string                           `json:"website,omitempty"`
	Email               *string                           `json:"email,omitempty"`
	EmailVerified       *bool                             `json:"email_verified,omitempty"`
	Gender              *string                           `json:"gender,omitempty"`
	Birthdate           *string                           `json:"birthdate,omitempty"`
	Zoneinfo            *string                           `json:"zoneinfo,omitempty"`
	Locale              *string                           `json:"locale,omitempty"`
	PhoneNumber         *string                           `json:"phone_number,omitempty"`
	PhoneNumberVerified *bool                             `json:"phone_number_verified,omitempty"`
	Address             *AddressClaimSet                  `json:"address,omitempty"`
	UpdatedAt           *int64                            `json:"updated_at,omitempty"`
	ClaimsLocales       *string                           `json:"claims_locales,omitempty"`
	Acr                 *string                           `json:"acr,omitempty"`
	SHash               *string                           `json:"s_hash,omitempty"`
	AuthTime            *int32                            `json:"authTime,omitempty"`
	Sid                 *string                           `json:"sid,omitempty"`
	TrustedCerts        []string                          `json:"trusted-certs,omitempty"`
	AllowedOrigins      []string                          `json:"allowed-origins,omitempty"`
	RealmAccess         *Access                           `json:"realm_access,omitempty"`
	ResourceAccess      *map[string]Access                `json:"resource_access,omitempty"`
	Authorization       *Authorization                    `json:"authorization,omitempty"`
	Cnf                 *Confirmation                     `json:"cnf,omitempty"`
	Scope               *string                           `json:"scope,omitempty"`
}

// NewAccessToken instantiates a new AccessToken object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessToken() *AccessToken {
	this := AccessToken{}
	return &this
}

// NewAccessTokenWithDefaults instantiates a new AccessToken object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessTokenWithDefaults() *AccessToken {
	this := AccessToken{}
	return &this
}

// GetJti returns the Jti field value if set, zero value otherwise.
func (o *AccessToken) GetJti() string {
	if o == nil || IsNil(o.Jti) {
		var ret string
		return ret
	}
	return *o.Jti
}

// GetJtiOk returns a tuple with the Jti field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetJtiOk() (*string, bool) {
	if o == nil || IsNil(o.Jti) {
		return nil, false
	}
	return o.Jti, true
}

// HasJti returns a boolean if a field has been set.
func (o *AccessToken) HasJti() bool {
	if o != nil && !IsNil(o.Jti) {
		return true
	}

	return false
}

// SetJti gets a reference to the given string and assigns it to the Jti field.
func (o *AccessToken) SetJti(v string) {
	o.Jti = &v
}

// GetExp returns the Exp field value if set, zero value otherwise.
func (o *AccessToken) GetExp() int64 {
	if o == nil || IsNil(o.Exp) {
		var ret int64
		return ret
	}
	return *o.Exp
}

// GetExpOk returns a tuple with the Exp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetExpOk() (*int64, bool) {
	if o == nil || IsNil(o.Exp) {
		return nil, false
	}
	return o.Exp, true
}

// HasExp returns a boolean if a field has been set.
func (o *AccessToken) HasExp() bool {
	if o != nil && !IsNil(o.Exp) {
		return true
	}

	return false
}

// SetExp gets a reference to the given int64 and assigns it to the Exp field.
func (o *AccessToken) SetExp(v int64) {
	o.Exp = &v
}

// GetNbf returns the Nbf field value if set, zero value otherwise.
func (o *AccessToken) GetNbf() int64 {
	if o == nil || IsNil(o.Nbf) {
		var ret int64
		return ret
	}
	return *o.Nbf
}

// GetNbfOk returns a tuple with the Nbf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetNbfOk() (*int64, bool) {
	if o == nil || IsNil(o.Nbf) {
		return nil, false
	}
	return o.Nbf, true
}

// HasNbf returns a boolean if a field has been set.
func (o *AccessToken) HasNbf() bool {
	if o != nil && !IsNil(o.Nbf) {
		return true
	}

	return false
}

// SetNbf gets a reference to the given int64 and assigns it to the Nbf field.
func (o *AccessToken) SetNbf(v int64) {
	o.Nbf = &v
}

// GetIat returns the Iat field value if set, zero value otherwise.
func (o *AccessToken) GetIat() int64 {
	if o == nil || IsNil(o.Iat) {
		var ret int64
		return ret
	}
	return *o.Iat
}

// GetIatOk returns a tuple with the Iat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetIatOk() (*int64, bool) {
	if o == nil || IsNil(o.Iat) {
		return nil, false
	}
	return o.Iat, true
}

// HasIat returns a boolean if a field has been set.
func (o *AccessToken) HasIat() bool {
	if o != nil && !IsNil(o.Iat) {
		return true
	}

	return false
}

// SetIat gets a reference to the given int64 and assigns it to the Iat field.
func (o *AccessToken) SetIat(v int64) {
	o.Iat = &v
}

// GetIss returns the Iss field value if set, zero value otherwise.
func (o *AccessToken) GetIss() string {
	if o == nil || IsNil(o.Iss) {
		var ret string
		return ret
	}
	return *o.Iss
}

// GetIssOk returns a tuple with the Iss field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetIssOk() (*string, bool) {
	if o == nil || IsNil(o.Iss) {
		return nil, false
	}
	return o.Iss, true
}

// HasIss returns a boolean if a field has been set.
func (o *AccessToken) HasIss() bool {
	if o != nil && !IsNil(o.Iss) {
		return true
	}

	return false
}

// SetIss gets a reference to the given string and assigns it to the Iss field.
func (o *AccessToken) SetIss(v string) {
	o.Iss = &v
}

// GetSub returns the Sub field value if set, zero value otherwise.
func (o *AccessToken) GetSub() string {
	if o == nil || IsNil(o.Sub) {
		var ret string
		return ret
	}
	return *o.Sub
}

// GetSubOk returns a tuple with the Sub field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetSubOk() (*string, bool) {
	if o == nil || IsNil(o.Sub) {
		return nil, false
	}
	return o.Sub, true
}

// HasSub returns a boolean if a field has been set.
func (o *AccessToken) HasSub() bool {
	if o != nil && !IsNil(o.Sub) {
		return true
	}

	return false
}

// SetSub gets a reference to the given string and assigns it to the Sub field.
func (o *AccessToken) SetSub(v string) {
	o.Sub = &v
}

// GetTyp returns the Typ field value if set, zero value otherwise.
func (o *AccessToken) GetTyp() string {
	if o == nil || IsNil(o.Typ) {
		var ret string
		return ret
	}
	return *o.Typ
}

// GetTypOk returns a tuple with the Typ field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetTypOk() (*string, bool) {
	if o == nil || IsNil(o.Typ) {
		return nil, false
	}
	return o.Typ, true
}

// HasTyp returns a boolean if a field has been set.
func (o *AccessToken) HasTyp() bool {
	if o != nil && !IsNil(o.Typ) {
		return true
	}

	return false
}

// SetTyp gets a reference to the given string and assigns it to the Typ field.
func (o *AccessToken) SetTyp(v string) {
	o.Typ = &v
}

// GetAzp returns the Azp field value if set, zero value otherwise.
func (o *AccessToken) GetAzp() string {
	if o == nil || IsNil(o.Azp) {
		var ret string
		return ret
	}
	return *o.Azp
}

// GetAzpOk returns a tuple with the Azp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetAzpOk() (*string, bool) {
	if o == nil || IsNil(o.Azp) {
		return nil, false
	}
	return o.Azp, true
}

// HasAzp returns a boolean if a field has been set.
func (o *AccessToken) HasAzp() bool {
	if o != nil && !IsNil(o.Azp) {
		return true
	}

	return false
}

// SetAzp gets a reference to the given string and assigns it to the Azp field.
func (o *AccessToken) SetAzp(v string) {
	o.Azp = &v
}

// GetOtherClaims returns the OtherClaims field value if set, zero value otherwise.
func (o *AccessToken) GetOtherClaims() map[string]map[string]interface{} {
	if o == nil || IsNil(o.OtherClaims) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.OtherClaims
}

// GetOtherClaimsOk returns a tuple with the OtherClaims field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetOtherClaimsOk() (map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.OtherClaims) {
		return map[string]map[string]interface{}{}, false
	}
	return o.OtherClaims, true
}

// HasOtherClaims returns a boolean if a field has been set.
func (o *AccessToken) HasOtherClaims() bool {
	if o != nil && !IsNil(o.OtherClaims) {
		return true
	}

	return false
}

// SetOtherClaims gets a reference to the given map[string]map[string]interface{} and assigns it to the OtherClaims field.
func (o *AccessToken) SetOtherClaims(v map[string]map[string]interface{}) {
	o.OtherClaims = v
}

// GetNonce returns the Nonce field value if set, zero value otherwise.
func (o *AccessToken) GetNonce() string {
	if o == nil || IsNil(o.Nonce) {
		var ret string
		return ret
	}
	return *o.Nonce
}

// GetNonceOk returns a tuple with the Nonce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetNonceOk() (*string, bool) {
	if o == nil || IsNil(o.Nonce) {
		return nil, false
	}
	return o.Nonce, true
}

// HasNonce returns a boolean if a field has been set.
func (o *AccessToken) HasNonce() bool {
	if o != nil && !IsNil(o.Nonce) {
		return true
	}

	return false
}

// SetNonce gets a reference to the given string and assigns it to the Nonce field.
func (o *AccessToken) SetNonce(v string) {
	o.Nonce = &v
}

// GetAuthTime returns the AuthTime field value if set, zero value otherwise.
func (o *AccessToken) GetAuthTime() int64 {
	if o == nil || IsNil(o.AuthTime) {
		var ret int64
		return ret
	}
	return *o.AuthTime
}

// GetAuthTimeOk returns a tuple with the AuthTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetAuthTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.AuthTime) {
		return nil, false
	}
	return o.AuthTime, true
}

// HasAuthTime returns a boolean if a field has been set.
func (o *AccessToken) HasAuthTime() bool {
	if o != nil && !IsNil(o.AuthTime) {
		return true
	}

	return false
}

// SetAuthTime gets a reference to the given int64 and assigns it to the AuthTime field.
func (o *AccessToken) SetAuthTime(v int64) {
	o.AuthTime = &v
}

// GetSessionState returns the SessionState field value if set, zero value otherwise.
func (o *AccessToken) GetSessionState() string {
	if o == nil || IsNil(o.SessionState) {
		var ret string
		return ret
	}
	return *o.SessionState
}

// GetSessionStateOk returns a tuple with the SessionState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetSessionStateOk() (*string, bool) {
	if o == nil || IsNil(o.SessionState) {
		return nil, false
	}
	return o.SessionState, true
}

// HasSessionState returns a boolean if a field has been set.
func (o *AccessToken) HasSessionState() bool {
	if o != nil && !IsNil(o.SessionState) {
		return true
	}

	return false
}

// SetSessionState gets a reference to the given string and assigns it to the SessionState field.
func (o *AccessToken) SetSessionState(v string) {
	o.SessionState = &v
}

// GetAtHash returns the AtHash field value if set, zero value otherwise.
func (o *AccessToken) GetAtHash() string {
	if o == nil || IsNil(o.AtHash) {
		var ret string
		return ret
	}
	return *o.AtHash
}

// GetAtHashOk returns a tuple with the AtHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetAtHashOk() (*string, bool) {
	if o == nil || IsNil(o.AtHash) {
		return nil, false
	}
	return o.AtHash, true
}

// HasAtHash returns a boolean if a field has been set.
func (o *AccessToken) HasAtHash() bool {
	if o != nil && !IsNil(o.AtHash) {
		return true
	}

	return false
}

// SetAtHash gets a reference to the given string and assigns it to the AtHash field.
func (o *AccessToken) SetAtHash(v string) {
	o.AtHash = &v
}

// GetCHash returns the CHash field value if set, zero value otherwise.
func (o *AccessToken) GetCHash() string {
	if o == nil || IsNil(o.CHash) {
		var ret string
		return ret
	}
	return *o.CHash
}

// GetCHashOk returns a tuple with the CHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetCHashOk() (*string, bool) {
	if o == nil || IsNil(o.CHash) {
		return nil, false
	}
	return o.CHash, true
}

// HasCHash returns a boolean if a field has been set.
func (o *AccessToken) HasCHash() bool {
	if o != nil && !IsNil(o.CHash) {
		return true
	}

	return false
}

// SetCHash gets a reference to the given string and assigns it to the CHash field.
func (o *AccessToken) SetCHash(v string) {
	o.CHash = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AccessToken) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AccessToken) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AccessToken) SetName(v string) {
	o.Name = &v
}

// GetGivenName returns the GivenName field value if set, zero value otherwise.
func (o *AccessToken) GetGivenName() string {
	if o == nil || IsNil(o.GivenName) {
		var ret string
		return ret
	}
	return *o.GivenName
}

// GetGivenNameOk returns a tuple with the GivenName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetGivenNameOk() (*string, bool) {
	if o == nil || IsNil(o.GivenName) {
		return nil, false
	}
	return o.GivenName, true
}

// HasGivenName returns a boolean if a field has been set.
func (o *AccessToken) HasGivenName() bool {
	if o != nil && !IsNil(o.GivenName) {
		return true
	}

	return false
}

// SetGivenName gets a reference to the given string and assigns it to the GivenName field.
func (o *AccessToken) SetGivenName(v string) {
	o.GivenName = &v
}

// GetFamilyName returns the FamilyName field value if set, zero value otherwise.
func (o *AccessToken) GetFamilyName() string {
	if o == nil || IsNil(o.FamilyName) {
		var ret string
		return ret
	}
	return *o.FamilyName
}

// GetFamilyNameOk returns a tuple with the FamilyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetFamilyNameOk() (*string, bool) {
	if o == nil || IsNil(o.FamilyName) {
		return nil, false
	}
	return o.FamilyName, true
}

// HasFamilyName returns a boolean if a field has been set.
func (o *AccessToken) HasFamilyName() bool {
	if o != nil && !IsNil(o.FamilyName) {
		return true
	}

	return false
}

// SetFamilyName gets a reference to the given string and assigns it to the FamilyName field.
func (o *AccessToken) SetFamilyName(v string) {
	o.FamilyName = &v
}

// GetMiddleName returns the MiddleName field value if set, zero value otherwise.
func (o *AccessToken) GetMiddleName() string {
	if o == nil || IsNil(o.MiddleName) {
		var ret string
		return ret
	}
	return *o.MiddleName
}

// GetMiddleNameOk returns a tuple with the MiddleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetMiddleNameOk() (*string, bool) {
	if o == nil || IsNil(o.MiddleName) {
		return nil, false
	}
	return o.MiddleName, true
}

// HasMiddleName returns a boolean if a field has been set.
func (o *AccessToken) HasMiddleName() bool {
	if o != nil && !IsNil(o.MiddleName) {
		return true
	}

	return false
}

// SetMiddleName gets a reference to the given string and assigns it to the MiddleName field.
func (o *AccessToken) SetMiddleName(v string) {
	o.MiddleName = &v
}

// GetNickname returns the Nickname field value if set, zero value otherwise.
func (o *AccessToken) GetNickname() string {
	if o == nil || IsNil(o.Nickname) {
		var ret string
		return ret
	}
	return *o.Nickname
}

// GetNicknameOk returns a tuple with the Nickname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetNicknameOk() (*string, bool) {
	if o == nil || IsNil(o.Nickname) {
		return nil, false
	}
	return o.Nickname, true
}

// HasNickname returns a boolean if a field has been set.
func (o *AccessToken) HasNickname() bool {
	if o != nil && !IsNil(o.Nickname) {
		return true
	}

	return false
}

// SetNickname gets a reference to the given string and assigns it to the Nickname field.
func (o *AccessToken) SetNickname(v string) {
	o.Nickname = &v
}

// GetPreferredUsername returns the PreferredUsername field value if set, zero value otherwise.
func (o *AccessToken) GetPreferredUsername() string {
	if o == nil || IsNil(o.PreferredUsername) {
		var ret string
		return ret
	}
	return *o.PreferredUsername
}

// GetPreferredUsernameOk returns a tuple with the PreferredUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetPreferredUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.PreferredUsername) {
		return nil, false
	}
	return o.PreferredUsername, true
}

// HasPreferredUsername returns a boolean if a field has been set.
func (o *AccessToken) HasPreferredUsername() bool {
	if o != nil && !IsNil(o.PreferredUsername) {
		return true
	}

	return false
}

// SetPreferredUsername gets a reference to the given string and assigns it to the PreferredUsername field.
func (o *AccessToken) SetPreferredUsername(v string) {
	o.PreferredUsername = &v
}

// GetProfile returns the Profile field value if set, zero value otherwise.
func (o *AccessToken) GetProfile() string {
	if o == nil || IsNil(o.Profile) {
		var ret string
		return ret
	}
	return *o.Profile
}

// GetProfileOk returns a tuple with the Profile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetProfileOk() (*string, bool) {
	if o == nil || IsNil(o.Profile) {
		return nil, false
	}
	return o.Profile, true
}

// HasProfile returns a boolean if a field has been set.
func (o *AccessToken) HasProfile() bool {
	if o != nil && !IsNil(o.Profile) {
		return true
	}

	return false
}

// SetProfile gets a reference to the given string and assigns it to the Profile field.
func (o *AccessToken) SetProfile(v string) {
	o.Profile = &v
}

// GetPicture returns the Picture field value if set, zero value otherwise.
func (o *AccessToken) GetPicture() string {
	if o == nil || IsNil(o.Picture) {
		var ret string
		return ret
	}
	return *o.Picture
}

// GetPictureOk returns a tuple with the Picture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetPictureOk() (*string, bool) {
	if o == nil || IsNil(o.Picture) {
		return nil, false
	}
	return o.Picture, true
}

// HasPicture returns a boolean if a field has been set.
func (o *AccessToken) HasPicture() bool {
	if o != nil && !IsNil(o.Picture) {
		return true
	}

	return false
}

// SetPicture gets a reference to the given string and assigns it to the Picture field.
func (o *AccessToken) SetPicture(v string) {
	o.Picture = &v
}

// GetWebsite returns the Website field value if set, zero value otherwise.
func (o *AccessToken) GetWebsite() string {
	if o == nil || IsNil(o.Website) {
		var ret string
		return ret
	}
	return *o.Website
}

// GetWebsiteOk returns a tuple with the Website field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetWebsiteOk() (*string, bool) {
	if o == nil || IsNil(o.Website) {
		return nil, false
	}
	return o.Website, true
}

// HasWebsite returns a boolean if a field has been set.
func (o *AccessToken) HasWebsite() bool {
	if o != nil && !IsNil(o.Website) {
		return true
	}

	return false
}

// SetWebsite gets a reference to the given string and assigns it to the Website field.
func (o *AccessToken) SetWebsite(v string) {
	o.Website = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *AccessToken) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *AccessToken) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *AccessToken) SetEmail(v string) {
	o.Email = &v
}

// GetEmailVerified returns the EmailVerified field value if set, zero value otherwise.
func (o *AccessToken) GetEmailVerified() bool {
	if o == nil || IsNil(o.EmailVerified) {
		var ret bool
		return ret
	}
	return *o.EmailVerified
}

// GetEmailVerifiedOk returns a tuple with the EmailVerified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetEmailVerifiedOk() (*bool, bool) {
	if o == nil || IsNil(o.EmailVerified) {
		return nil, false
	}
	return o.EmailVerified, true
}

// HasEmailVerified returns a boolean if a field has been set.
func (o *AccessToken) HasEmailVerified() bool {
	if o != nil && !IsNil(o.EmailVerified) {
		return true
	}

	return false
}

// SetEmailVerified gets a reference to the given bool and assigns it to the EmailVerified field.
func (o *AccessToken) SetEmailVerified(v bool) {
	o.EmailVerified = &v
}

// GetGender returns the Gender field value if set, zero value otherwise.
func (o *AccessToken) GetGender() string {
	if o == nil || IsNil(o.Gender) {
		var ret string
		return ret
	}
	return *o.Gender
}

// GetGenderOk returns a tuple with the Gender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetGenderOk() (*string, bool) {
	if o == nil || IsNil(o.Gender) {
		return nil, false
	}
	return o.Gender, true
}

// HasGender returns a boolean if a field has been set.
func (o *AccessToken) HasGender() bool {
	if o != nil && !IsNil(o.Gender) {
		return true
	}

	return false
}

// SetGender gets a reference to the given string and assigns it to the Gender field.
func (o *AccessToken) SetGender(v string) {
	o.Gender = &v
}

// GetBirthdate returns the Birthdate field value if set, zero value otherwise.
func (o *AccessToken) GetBirthdate() string {
	if o == nil || IsNil(o.Birthdate) {
		var ret string
		return ret
	}
	return *o.Birthdate
}

// GetBirthdateOk returns a tuple with the Birthdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetBirthdateOk() (*string, bool) {
	if o == nil || IsNil(o.Birthdate) {
		return nil, false
	}
	return o.Birthdate, true
}

// HasBirthdate returns a boolean if a field has been set.
func (o *AccessToken) HasBirthdate() bool {
	if o != nil && !IsNil(o.Birthdate) {
		return true
	}

	return false
}

// SetBirthdate gets a reference to the given string and assigns it to the Birthdate field.
func (o *AccessToken) SetBirthdate(v string) {
	o.Birthdate = &v
}

// GetZoneinfo returns the Zoneinfo field value if set, zero value otherwise.
func (o *AccessToken) GetZoneinfo() string {
	if o == nil || IsNil(o.Zoneinfo) {
		var ret string
		return ret
	}
	return *o.Zoneinfo
}

// GetZoneinfoOk returns a tuple with the Zoneinfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetZoneinfoOk() (*string, bool) {
	if o == nil || IsNil(o.Zoneinfo) {
		return nil, false
	}
	return o.Zoneinfo, true
}

// HasZoneinfo returns a boolean if a field has been set.
func (o *AccessToken) HasZoneinfo() bool {
	if o != nil && !IsNil(o.Zoneinfo) {
		return true
	}

	return false
}

// SetZoneinfo gets a reference to the given string and assigns it to the Zoneinfo field.
func (o *AccessToken) SetZoneinfo(v string) {
	o.Zoneinfo = &v
}

// GetLocale returns the Locale field value if set, zero value otherwise.
func (o *AccessToken) GetLocale() string {
	if o == nil || IsNil(o.Locale) {
		var ret string
		return ret
	}
	return *o.Locale
}

// GetLocaleOk returns a tuple with the Locale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetLocaleOk() (*string, bool) {
	if o == nil || IsNil(o.Locale) {
		return nil, false
	}
	return o.Locale, true
}

// HasLocale returns a boolean if a field has been set.
func (o *AccessToken) HasLocale() bool {
	if o != nil && !IsNil(o.Locale) {
		return true
	}

	return false
}

// SetLocale gets a reference to the given string and assigns it to the Locale field.
func (o *AccessToken) SetLocale(v string) {
	o.Locale = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *AccessToken) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetPhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *AccessToken) HasPhoneNumber() bool {
	if o != nil && !IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *AccessToken) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetPhoneNumberVerified returns the PhoneNumberVerified field value if set, zero value otherwise.
func (o *AccessToken) GetPhoneNumberVerified() bool {
	if o == nil || IsNil(o.PhoneNumberVerified) {
		var ret bool
		return ret
	}
	return *o.PhoneNumberVerified
}

// GetPhoneNumberVerifiedOk returns a tuple with the PhoneNumberVerified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetPhoneNumberVerifiedOk() (*bool, bool) {
	if o == nil || IsNil(o.PhoneNumberVerified) {
		return nil, false
	}
	return o.PhoneNumberVerified, true
}

// HasPhoneNumberVerified returns a boolean if a field has been set.
func (o *AccessToken) HasPhoneNumberVerified() bool {
	if o != nil && !IsNil(o.PhoneNumberVerified) {
		return true
	}

	return false
}

// SetPhoneNumberVerified gets a reference to the given bool and assigns it to the PhoneNumberVerified field.
func (o *AccessToken) SetPhoneNumberVerified(v bool) {
	o.PhoneNumberVerified = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *AccessToken) GetAddress() AddressClaimSet {
	if o == nil || IsNil(o.Address) {
		var ret AddressClaimSet
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetAddressOk() (*AddressClaimSet, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *AccessToken) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given AddressClaimSet and assigns it to the Address field.
func (o *AccessToken) SetAddress(v AddressClaimSet) {
	o.Address = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *AccessToken) GetUpdatedAt() int64 {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret int64
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetUpdatedAtOk() (*int64, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *AccessToken) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int64 and assigns it to the UpdatedAt field.
func (o *AccessToken) SetUpdatedAt(v int64) {
	o.UpdatedAt = &v
}

// GetClaimsLocales returns the ClaimsLocales field value if set, zero value otherwise.
func (o *AccessToken) GetClaimsLocales() string {
	if o == nil || IsNil(o.ClaimsLocales) {
		var ret string
		return ret
	}
	return *o.ClaimsLocales
}

// GetClaimsLocalesOk returns a tuple with the ClaimsLocales field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetClaimsLocalesOk() (*string, bool) {
	if o == nil || IsNil(o.ClaimsLocales) {
		return nil, false
	}
	return o.ClaimsLocales, true
}

// HasClaimsLocales returns a boolean if a field has been set.
func (o *AccessToken) HasClaimsLocales() bool {
	if o != nil && !IsNil(o.ClaimsLocales) {
		return true
	}

	return false
}

// SetClaimsLocales gets a reference to the given string and assigns it to the ClaimsLocales field.
func (o *AccessToken) SetClaimsLocales(v string) {
	o.ClaimsLocales = &v
}

// GetAcr returns the Acr field value if set, zero value otherwise.
func (o *AccessToken) GetAcr() string {
	if o == nil || IsNil(o.Acr) {
		var ret string
		return ret
	}
	return *o.Acr
}

// GetAcrOk returns a tuple with the Acr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetAcrOk() (*string, bool) {
	if o == nil || IsNil(o.Acr) {
		return nil, false
	}
	return o.Acr, true
}

// HasAcr returns a boolean if a field has been set.
func (o *AccessToken) HasAcr() bool {
	if o != nil && !IsNil(o.Acr) {
		return true
	}

	return false
}

// SetAcr gets a reference to the given string and assigns it to the Acr field.
func (o *AccessToken) SetAcr(v string) {
	o.Acr = &v
}

// GetSHash returns the SHash field value if set, zero value otherwise.
func (o *AccessToken) GetSHash() string {
	if o == nil || IsNil(o.SHash) {
		var ret string
		return ret
	}
	return *o.SHash
}

// GetSHashOk returns a tuple with the SHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetSHashOk() (*string, bool) {
	if o == nil || IsNil(o.SHash) {
		return nil, false
	}
	return o.SHash, true
}

// HasSHash returns a boolean if a field has been set.
func (o *AccessToken) HasSHash() bool {
	if o != nil && !IsNil(o.SHash) {
		return true
	}

	return false
}

// SetSHash gets a reference to the given string and assigns it to the SHash field.
func (o *AccessToken) SetSHash(v string) {
	o.SHash = &v
}

// GetAuthTime returns the AuthTime field value if set, zero value otherwise.
func (o *AccessToken) GetAuthTime() int32 {
	if o == nil || IsNil(o.AuthTime) {
		var ret int32
		return ret
	}
	return *o.AuthTime
}

// GetAuthTimeOk returns a tuple with the AuthTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetAuthTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.AuthTime) {
		return nil, false
	}
	return o.AuthTime, true
}

// HasAuthTime returns a boolean if a field has been set.
func (o *AccessToken) HasAuthTime() bool {
	if o != nil && !IsNil(o.AuthTime) {
		return true
	}

	return false
}

// SetAuthTime gets a reference to the given int32 and assigns it to the AuthTime field.
func (o *AccessToken) SetAuthTime(v int32) {
	o.AuthTime = &v
}

// GetSid returns the Sid field value if set, zero value otherwise.
func (o *AccessToken) GetSid() string {
	if o == nil || IsNil(o.Sid) {
		var ret string
		return ret
	}
	return *o.Sid
}

// GetSidOk returns a tuple with the Sid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetSidOk() (*string, bool) {
	if o == nil || IsNil(o.Sid) {
		return nil, false
	}
	return o.Sid, true
}

// HasSid returns a boolean if a field has been set.
func (o *AccessToken) HasSid() bool {
	if o != nil && !IsNil(o.Sid) {
		return true
	}

	return false
}

// SetSid gets a reference to the given string and assigns it to the Sid field.
func (o *AccessToken) SetSid(v string) {
	o.Sid = &v
}

// GetTrustedCerts returns the TrustedCerts field value if set, zero value otherwise.
func (o *AccessToken) GetTrustedCerts() []string {
	if o == nil || IsNil(o.TrustedCerts) {
		var ret []string
		return ret
	}
	return o.TrustedCerts
}

// GetTrustedCertsOk returns a tuple with the TrustedCerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetTrustedCertsOk() ([]string, bool) {
	if o == nil || IsNil(o.TrustedCerts) {
		return nil, false
	}
	return o.TrustedCerts, true
}

// HasTrustedCerts returns a boolean if a field has been set.
func (o *AccessToken) HasTrustedCerts() bool {
	if o != nil && !IsNil(o.TrustedCerts) {
		return true
	}

	return false
}

// SetTrustedCerts gets a reference to the given []string and assigns it to the TrustedCerts field.
func (o *AccessToken) SetTrustedCerts(v []string) {
	o.TrustedCerts = v
}

// GetAllowedOrigins returns the AllowedOrigins field value if set, zero value otherwise.
func (o *AccessToken) GetAllowedOrigins() []string {
	if o == nil || IsNil(o.AllowedOrigins) {
		var ret []string
		return ret
	}
	return o.AllowedOrigins
}

// GetAllowedOriginsOk returns a tuple with the AllowedOrigins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetAllowedOriginsOk() ([]string, bool) {
	if o == nil || IsNil(o.AllowedOrigins) {
		return nil, false
	}
	return o.AllowedOrigins, true
}

// HasAllowedOrigins returns a boolean if a field has been set.
func (o *AccessToken) HasAllowedOrigins() bool {
	if o != nil && !IsNil(o.AllowedOrigins) {
		return true
	}

	return false
}

// SetAllowedOrigins gets a reference to the given []string and assigns it to the AllowedOrigins field.
func (o *AccessToken) SetAllowedOrigins(v []string) {
	o.AllowedOrigins = v
}

// GetRealmAccess returns the RealmAccess field value if set, zero value otherwise.
func (o *AccessToken) GetRealmAccess() Access {
	if o == nil || IsNil(o.RealmAccess) {
		var ret Access
		return ret
	}
	return *o.RealmAccess
}

// GetRealmAccessOk returns a tuple with the RealmAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetRealmAccessOk() (*Access, bool) {
	if o == nil || IsNil(o.RealmAccess) {
		return nil, false
	}
	return o.RealmAccess, true
}

// HasRealmAccess returns a boolean if a field has been set.
func (o *AccessToken) HasRealmAccess() bool {
	if o != nil && !IsNil(o.RealmAccess) {
		return true
	}

	return false
}

// SetRealmAccess gets a reference to the given Access and assigns it to the RealmAccess field.
func (o *AccessToken) SetRealmAccess(v Access) {
	o.RealmAccess = &v
}

// GetResourceAccess returns the ResourceAccess field value if set, zero value otherwise.
func (o *AccessToken) GetResourceAccess() map[string]Access {
	if o == nil || IsNil(o.ResourceAccess) {
		var ret map[string]Access
		return ret
	}
	return *o.ResourceAccess
}

// GetResourceAccessOk returns a tuple with the ResourceAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetResourceAccessOk() (*map[string]Access, bool) {
	if o == nil || IsNil(o.ResourceAccess) {
		return nil, false
	}
	return o.ResourceAccess, true
}

// HasResourceAccess returns a boolean if a field has been set.
func (o *AccessToken) HasResourceAccess() bool {
	if o != nil && !IsNil(o.ResourceAccess) {
		return true
	}

	return false
}

// SetResourceAccess gets a reference to the given map[string]Access and assigns it to the ResourceAccess field.
func (o *AccessToken) SetResourceAccess(v map[string]Access) {
	o.ResourceAccess = &v
}

// GetAuthorization returns the Authorization field value if set, zero value otherwise.
func (o *AccessToken) GetAuthorization() Authorization {
	if o == nil || IsNil(o.Authorization) {
		var ret Authorization
		return ret
	}
	return *o.Authorization
}

// GetAuthorizationOk returns a tuple with the Authorization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetAuthorizationOk() (*Authorization, bool) {
	if o == nil || IsNil(o.Authorization) {
		return nil, false
	}
	return o.Authorization, true
}

// HasAuthorization returns a boolean if a field has been set.
func (o *AccessToken) HasAuthorization() bool {
	if o != nil && !IsNil(o.Authorization) {
		return true
	}

	return false
}

// SetAuthorization gets a reference to the given Authorization and assigns it to the Authorization field.
func (o *AccessToken) SetAuthorization(v Authorization) {
	o.Authorization = &v
}

// GetCnf returns the Cnf field value if set, zero value otherwise.
func (o *AccessToken) GetCnf() Confirmation {
	if o == nil || IsNil(o.Cnf) {
		var ret Confirmation
		return ret
	}
	return *o.Cnf
}

// GetCnfOk returns a tuple with the Cnf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetCnfOk() (*Confirmation, bool) {
	if o == nil || IsNil(o.Cnf) {
		return nil, false
	}
	return o.Cnf, true
}

// HasCnf returns a boolean if a field has been set.
func (o *AccessToken) HasCnf() bool {
	if o != nil && !IsNil(o.Cnf) {
		return true
	}

	return false
}

// SetCnf gets a reference to the given Confirmation and assigns it to the Cnf field.
func (o *AccessToken) SetCnf(v Confirmation) {
	o.Cnf = &v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *AccessToken) GetScope() string {
	if o == nil || IsNil(o.Scope) {
		var ret string
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessToken) GetScopeOk() (*string, bool) {
	if o == nil || IsNil(o.Scope) {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *AccessToken) HasScope() bool {
	if o != nil && !IsNil(o.Scope) {
		return true
	}

	return false
}

// SetScope gets a reference to the given string and assigns it to the Scope field.
func (o *AccessToken) SetScope(v string) {
	o.Scope = &v
}

func (o AccessToken) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccessToken) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Jti) {
		toSerialize["jti"] = o.Jti
	}
	if !IsNil(o.Exp) {
		toSerialize["exp"] = o.Exp
	}
	if !IsNil(o.Nbf) {
		toSerialize["nbf"] = o.Nbf
	}
	if !IsNil(o.Iat) {
		toSerialize["iat"] = o.Iat
	}
	if !IsNil(o.Iss) {
		toSerialize["iss"] = o.Iss
	}
	if !IsNil(o.Sub) {
		toSerialize["sub"] = o.Sub
	}
	if !IsNil(o.Typ) {
		toSerialize["typ"] = o.Typ
	}
	if !IsNil(o.Azp) {
		toSerialize["azp"] = o.Azp
	}
	if !IsNil(o.OtherClaims) {
		toSerialize["otherClaims"] = o.OtherClaims
	}
	if !IsNil(o.Nonce) {
		toSerialize["nonce"] = o.Nonce
	}
	if !IsNil(o.AuthTime) {
		toSerialize["auth_time"] = o.AuthTime
	}
	if !IsNil(o.SessionState) {
		toSerialize["session_state"] = o.SessionState
	}
	if !IsNil(o.AtHash) {
		toSerialize["at_hash"] = o.AtHash
	}
	if !IsNil(o.CHash) {
		toSerialize["c_hash"] = o.CHash
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.GivenName) {
		toSerialize["given_name"] = o.GivenName
	}
	if !IsNil(o.FamilyName) {
		toSerialize["family_name"] = o.FamilyName
	}
	if !IsNil(o.MiddleName) {
		toSerialize["middle_name"] = o.MiddleName
	}
	if !IsNil(o.Nickname) {
		toSerialize["nickname"] = o.Nickname
	}
	if !IsNil(o.PreferredUsername) {
		toSerialize["preferred_username"] = o.PreferredUsername
	}
	if !IsNil(o.Profile) {
		toSerialize["profile"] = o.Profile
	}
	if !IsNil(o.Picture) {
		toSerialize["picture"] = o.Picture
	}
	if !IsNil(o.Website) {
		toSerialize["website"] = o.Website
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.EmailVerified) {
		toSerialize["email_verified"] = o.EmailVerified
	}
	if !IsNil(o.Gender) {
		toSerialize["gender"] = o.Gender
	}
	if !IsNil(o.Birthdate) {
		toSerialize["birthdate"] = o.Birthdate
	}
	if !IsNil(o.Zoneinfo) {
		toSerialize["zoneinfo"] = o.Zoneinfo
	}
	if !IsNil(o.Locale) {
		toSerialize["locale"] = o.Locale
	}
	if !IsNil(o.PhoneNumber) {
		toSerialize["phone_number"] = o.PhoneNumber
	}
	if !IsNil(o.PhoneNumberVerified) {
		toSerialize["phone_number_verified"] = o.PhoneNumberVerified
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.ClaimsLocales) {
		toSerialize["claims_locales"] = o.ClaimsLocales
	}
	if !IsNil(o.Acr) {
		toSerialize["acr"] = o.Acr
	}
	if !IsNil(o.SHash) {
		toSerialize["s_hash"] = o.SHash
	}
	if !IsNil(o.AuthTime) {
		toSerialize["authTime"] = o.AuthTime
	}
	if !IsNil(o.Sid) {
		toSerialize["sid"] = o.Sid
	}
	if !IsNil(o.TrustedCerts) {
		toSerialize["trusted-certs"] = o.TrustedCerts
	}
	if !IsNil(o.AllowedOrigins) {
		toSerialize["allowed-origins"] = o.AllowedOrigins
	}
	if !IsNil(o.RealmAccess) {
		toSerialize["realm_access"] = o.RealmAccess
	}
	if !IsNil(o.ResourceAccess) {
		toSerialize["resource_access"] = o.ResourceAccess
	}
	if !IsNil(o.Authorization) {
		toSerialize["authorization"] = o.Authorization
	}
	if !IsNil(o.Cnf) {
		toSerialize["cnf"] = o.Cnf
	}
	if !IsNil(o.Scope) {
		toSerialize["scope"] = o.Scope
	}
	return toSerialize, nil
}

type NullableAccessToken struct {
	value *AccessToken
	isSet bool
}

func (v NullableAccessToken) Get() *AccessToken {
	return v.value
}

func (v *NullableAccessToken) Set(val *AccessToken) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessToken) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessToken) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessToken(val *AccessToken) *NullableAccessToken {
	return &NullableAccessToken{value: val, isSet: true}
}

func (v NullableAccessToken) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessToken) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
