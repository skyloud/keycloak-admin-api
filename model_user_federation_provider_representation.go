/*
Keycloak Admin REST API

This is a REST API reference for the Keycloak Admin REST API.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UserFederationProviderRepresentation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserFederationProviderRepresentation{}

// UserFederationProviderRepresentation struct for UserFederationProviderRepresentation
type UserFederationProviderRepresentation struct {
	Id                *string            `json:"id,omitempty"`
	DisplayName       *string            `json:"displayName,omitempty"`
	ProviderName      *string            `json:"providerName,omitempty"`
	Config            *map[string]string `json:"config,omitempty"`
	Priority          *int32             `json:"priority,omitempty"`
	FullSyncPeriod    *int32             `json:"fullSyncPeriod,omitempty"`
	ChangedSyncPeriod *int32             `json:"changedSyncPeriod,omitempty"`
	LastSync          *int32             `json:"lastSync,omitempty"`
}

// NewUserFederationProviderRepresentation instantiates a new UserFederationProviderRepresentation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserFederationProviderRepresentation() *UserFederationProviderRepresentation {
	this := UserFederationProviderRepresentation{}
	return &this
}

// NewUserFederationProviderRepresentationWithDefaults instantiates a new UserFederationProviderRepresentation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserFederationProviderRepresentationWithDefaults() *UserFederationProviderRepresentation {
	this := UserFederationProviderRepresentation{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UserFederationProviderRepresentation) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserFederationProviderRepresentation) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UserFederationProviderRepresentation) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *UserFederationProviderRepresentation) SetId(v string) {
	o.Id = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *UserFederationProviderRepresentation) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserFederationProviderRepresentation) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *UserFederationProviderRepresentation) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *UserFederationProviderRepresentation) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetProviderName returns the ProviderName field value if set, zero value otherwise.
func (o *UserFederationProviderRepresentation) GetProviderName() string {
	if o == nil || IsNil(o.ProviderName) {
		var ret string
		return ret
	}
	return *o.ProviderName
}

// GetProviderNameOk returns a tuple with the ProviderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserFederationProviderRepresentation) GetProviderNameOk() (*string, bool) {
	if o == nil || IsNil(o.ProviderName) {
		return nil, false
	}
	return o.ProviderName, true
}

// HasProviderName returns a boolean if a field has been set.
func (o *UserFederationProviderRepresentation) HasProviderName() bool {
	if o != nil && !IsNil(o.ProviderName) {
		return true
	}

	return false
}

// SetProviderName gets a reference to the given string and assigns it to the ProviderName field.
func (o *UserFederationProviderRepresentation) SetProviderName(v string) {
	o.ProviderName = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *UserFederationProviderRepresentation) GetConfig() map[string]string {
	if o == nil || IsNil(o.Config) {
		var ret map[string]string
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserFederationProviderRepresentation) GetConfigOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Config) {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *UserFederationProviderRepresentation) HasConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given map[string]string and assigns it to the Config field.
func (o *UserFederationProviderRepresentation) SetConfig(v map[string]string) {
	o.Config = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *UserFederationProviderRepresentation) GetPriority() int32 {
	if o == nil || IsNil(o.Priority) {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserFederationProviderRepresentation) GetPriorityOk() (*int32, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *UserFederationProviderRepresentation) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *UserFederationProviderRepresentation) SetPriority(v int32) {
	o.Priority = &v
}

// GetFullSyncPeriod returns the FullSyncPeriod field value if set, zero value otherwise.
func (o *UserFederationProviderRepresentation) GetFullSyncPeriod() int32 {
	if o == nil || IsNil(o.FullSyncPeriod) {
		var ret int32
		return ret
	}
	return *o.FullSyncPeriod
}

// GetFullSyncPeriodOk returns a tuple with the FullSyncPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserFederationProviderRepresentation) GetFullSyncPeriodOk() (*int32, bool) {
	if o == nil || IsNil(o.FullSyncPeriod) {
		return nil, false
	}
	return o.FullSyncPeriod, true
}

// HasFullSyncPeriod returns a boolean if a field has been set.
func (o *UserFederationProviderRepresentation) HasFullSyncPeriod() bool {
	if o != nil && !IsNil(o.FullSyncPeriod) {
		return true
	}

	return false
}

// SetFullSyncPeriod gets a reference to the given int32 and assigns it to the FullSyncPeriod field.
func (o *UserFederationProviderRepresentation) SetFullSyncPeriod(v int32) {
	o.FullSyncPeriod = &v
}

// GetChangedSyncPeriod returns the ChangedSyncPeriod field value if set, zero value otherwise.
func (o *UserFederationProviderRepresentation) GetChangedSyncPeriod() int32 {
	if o == nil || IsNil(o.ChangedSyncPeriod) {
		var ret int32
		return ret
	}
	return *o.ChangedSyncPeriod
}

// GetChangedSyncPeriodOk returns a tuple with the ChangedSyncPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserFederationProviderRepresentation) GetChangedSyncPeriodOk() (*int32, bool) {
	if o == nil || IsNil(o.ChangedSyncPeriod) {
		return nil, false
	}
	return o.ChangedSyncPeriod, true
}

// HasChangedSyncPeriod returns a boolean if a field has been set.
func (o *UserFederationProviderRepresentation) HasChangedSyncPeriod() bool {
	if o != nil && !IsNil(o.ChangedSyncPeriod) {
		return true
	}

	return false
}

// SetChangedSyncPeriod gets a reference to the given int32 and assigns it to the ChangedSyncPeriod field.
func (o *UserFederationProviderRepresentation) SetChangedSyncPeriod(v int32) {
	o.ChangedSyncPeriod = &v
}

// GetLastSync returns the LastSync field value if set, zero value otherwise.
func (o *UserFederationProviderRepresentation) GetLastSync() int32 {
	if o == nil || IsNil(o.LastSync) {
		var ret int32
		return ret
	}
	return *o.LastSync
}

// GetLastSyncOk returns a tuple with the LastSync field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserFederationProviderRepresentation) GetLastSyncOk() (*int32, bool) {
	if o == nil || IsNil(o.LastSync) {
		return nil, false
	}
	return o.LastSync, true
}

// HasLastSync returns a boolean if a field has been set.
func (o *UserFederationProviderRepresentation) HasLastSync() bool {
	if o != nil && !IsNil(o.LastSync) {
		return true
	}

	return false
}

// SetLastSync gets a reference to the given int32 and assigns it to the LastSync field.
func (o *UserFederationProviderRepresentation) SetLastSync(v int32) {
	o.LastSync = &v
}

func (o UserFederationProviderRepresentation) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserFederationProviderRepresentation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.ProviderName) {
		toSerialize["providerName"] = o.ProviderName
	}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	if !IsNil(o.FullSyncPeriod) {
		toSerialize["fullSyncPeriod"] = o.FullSyncPeriod
	}
	if !IsNil(o.ChangedSyncPeriod) {
		toSerialize["changedSyncPeriod"] = o.ChangedSyncPeriod
	}
	if !IsNil(o.LastSync) {
		toSerialize["lastSync"] = o.LastSync
	}
	return toSerialize, nil
}

type NullableUserFederationProviderRepresentation struct {
	value *UserFederationProviderRepresentation
	isSet bool
}

func (v NullableUserFederationProviderRepresentation) Get() *UserFederationProviderRepresentation {
	return v.value
}

func (v *NullableUserFederationProviderRepresentation) Set(val *UserFederationProviderRepresentation) {
	v.value = val
	v.isSet = true
}

func (v NullableUserFederationProviderRepresentation) IsSet() bool {
	return v.isSet
}

func (v *NullableUserFederationProviderRepresentation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserFederationProviderRepresentation(val *UserFederationProviderRepresentation) *NullableUserFederationProviderRepresentation {
	return &NullableUserFederationProviderRepresentation{value: val, isSet: true}
}

func (v NullableUserFederationProviderRepresentation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserFederationProviderRepresentation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
