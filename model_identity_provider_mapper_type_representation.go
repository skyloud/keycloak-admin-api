/*
Keycloak Admin REST API

This is a REST API reference for the Keycloak Admin REST API.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the IdentityProviderMapperTypeRepresentation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdentityProviderMapperTypeRepresentation{}

// IdentityProviderMapperTypeRepresentation struct for IdentityProviderMapperTypeRepresentation
type IdentityProviderMapperTypeRepresentation struct {
	Id         *string                        `json:"id,omitempty"`
	Name       *string                        `json:"name,omitempty"`
	Category   *string                        `json:"category,omitempty"`
	HelpText   *string                        `json:"helpText,omitempty"`
	Properties []ConfigPropertyRepresentation `json:"properties,omitempty"`
}

// NewIdentityProviderMapperTypeRepresentation instantiates a new IdentityProviderMapperTypeRepresentation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityProviderMapperTypeRepresentation() *IdentityProviderMapperTypeRepresentation {
	this := IdentityProviderMapperTypeRepresentation{}
	return &this
}

// NewIdentityProviderMapperTypeRepresentationWithDefaults instantiates a new IdentityProviderMapperTypeRepresentation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityProviderMapperTypeRepresentationWithDefaults() *IdentityProviderMapperTypeRepresentation {
	this := IdentityProviderMapperTypeRepresentation{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IdentityProviderMapperTypeRepresentation) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderMapperTypeRepresentation) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IdentityProviderMapperTypeRepresentation) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *IdentityProviderMapperTypeRepresentation) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IdentityProviderMapperTypeRepresentation) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderMapperTypeRepresentation) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IdentityProviderMapperTypeRepresentation) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IdentityProviderMapperTypeRepresentation) SetName(v string) {
	o.Name = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *IdentityProviderMapperTypeRepresentation) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderMapperTypeRepresentation) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *IdentityProviderMapperTypeRepresentation) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *IdentityProviderMapperTypeRepresentation) SetCategory(v string) {
	o.Category = &v
}

// GetHelpText returns the HelpText field value if set, zero value otherwise.
func (o *IdentityProviderMapperTypeRepresentation) GetHelpText() string {
	if o == nil || IsNil(o.HelpText) {
		var ret string
		return ret
	}
	return *o.HelpText
}

// GetHelpTextOk returns a tuple with the HelpText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderMapperTypeRepresentation) GetHelpTextOk() (*string, bool) {
	if o == nil || IsNil(o.HelpText) {
		return nil, false
	}
	return o.HelpText, true
}

// HasHelpText returns a boolean if a field has been set.
func (o *IdentityProviderMapperTypeRepresentation) HasHelpText() bool {
	if o != nil && !IsNil(o.HelpText) {
		return true
	}

	return false
}

// SetHelpText gets a reference to the given string and assigns it to the HelpText field.
func (o *IdentityProviderMapperTypeRepresentation) SetHelpText(v string) {
	o.HelpText = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *IdentityProviderMapperTypeRepresentation) GetProperties() []ConfigPropertyRepresentation {
	if o == nil || IsNil(o.Properties) {
		var ret []ConfigPropertyRepresentation
		return ret
	}
	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderMapperTypeRepresentation) GetPropertiesOk() ([]ConfigPropertyRepresentation, bool) {
	if o == nil || IsNil(o.Properties) {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *IdentityProviderMapperTypeRepresentation) HasProperties() bool {
	if o != nil && !IsNil(o.Properties) {
		return true
	}

	return false
}

// SetProperties gets a reference to the given []ConfigPropertyRepresentation and assigns it to the Properties field.
func (o *IdentityProviderMapperTypeRepresentation) SetProperties(v []ConfigPropertyRepresentation) {
	o.Properties = v
}

func (o IdentityProviderMapperTypeRepresentation) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdentityProviderMapperTypeRepresentation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.HelpText) {
		toSerialize["helpText"] = o.HelpText
	}
	if !IsNil(o.Properties) {
		toSerialize["properties"] = o.Properties
	}
	return toSerialize, nil
}

type NullableIdentityProviderMapperTypeRepresentation struct {
	value *IdentityProviderMapperTypeRepresentation
	isSet bool
}

func (v NullableIdentityProviderMapperTypeRepresentation) Get() *IdentityProviderMapperTypeRepresentation {
	return v.value
}

func (v *NullableIdentityProviderMapperTypeRepresentation) Set(val *IdentityProviderMapperTypeRepresentation) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityProviderMapperTypeRepresentation) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityProviderMapperTypeRepresentation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityProviderMapperTypeRepresentation(val *IdentityProviderMapperTypeRepresentation) *NullableIdentityProviderMapperTypeRepresentation {
	return &NullableIdentityProviderMapperTypeRepresentation{value: val, isSet: true}
}

func (v NullableIdentityProviderMapperTypeRepresentation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityProviderMapperTypeRepresentation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
