/*
Keycloak Admin REST API

This is a REST API reference for the Keycloak Admin REST API.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AuthenticationExecutionRepresentation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthenticationExecutionRepresentation{}

// AuthenticationExecutionRepresentation struct for AuthenticationExecutionRepresentation
type AuthenticationExecutionRepresentation struct {
	AuthenticatorConfig *string `json:"authenticatorConfig,omitempty"`
	Authenticator       *string `json:"authenticator,omitempty"`
	AuthenticatorFlow   *bool   `json:"authenticatorFlow,omitempty"`
	Requirement         *string `json:"requirement,omitempty"`
	Priority            *int32  `json:"priority,omitempty"`
	AutheticatorFlow    *bool   `json:"autheticatorFlow,omitempty"`
	Id                  *string `json:"id,omitempty"`
	FlowId              *string `json:"flowId,omitempty"`
	ParentFlow          *string `json:"parentFlow,omitempty"`
}

// NewAuthenticationExecutionRepresentation instantiates a new AuthenticationExecutionRepresentation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthenticationExecutionRepresentation() *AuthenticationExecutionRepresentation {
	this := AuthenticationExecutionRepresentation{}
	return &this
}

// NewAuthenticationExecutionRepresentationWithDefaults instantiates a new AuthenticationExecutionRepresentation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthenticationExecutionRepresentationWithDefaults() *AuthenticationExecutionRepresentation {
	this := AuthenticationExecutionRepresentation{}
	return &this
}

// GetAuthenticatorConfig returns the AuthenticatorConfig field value if set, zero value otherwise.
func (o *AuthenticationExecutionRepresentation) GetAuthenticatorConfig() string {
	if o == nil || IsNil(o.AuthenticatorConfig) {
		var ret string
		return ret
	}
	return *o.AuthenticatorConfig
}

// GetAuthenticatorConfigOk returns a tuple with the AuthenticatorConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationExecutionRepresentation) GetAuthenticatorConfigOk() (*string, bool) {
	if o == nil || IsNil(o.AuthenticatorConfig) {
		return nil, false
	}
	return o.AuthenticatorConfig, true
}

// HasAuthenticatorConfig returns a boolean if a field has been set.
func (o *AuthenticationExecutionRepresentation) HasAuthenticatorConfig() bool {
	if o != nil && !IsNil(o.AuthenticatorConfig) {
		return true
	}

	return false
}

// SetAuthenticatorConfig gets a reference to the given string and assigns it to the AuthenticatorConfig field.
func (o *AuthenticationExecutionRepresentation) SetAuthenticatorConfig(v string) {
	o.AuthenticatorConfig = &v
}

// GetAuthenticator returns the Authenticator field value if set, zero value otherwise.
func (o *AuthenticationExecutionRepresentation) GetAuthenticator() string {
	if o == nil || IsNil(o.Authenticator) {
		var ret string
		return ret
	}
	return *o.Authenticator
}

// GetAuthenticatorOk returns a tuple with the Authenticator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationExecutionRepresentation) GetAuthenticatorOk() (*string, bool) {
	if o == nil || IsNil(o.Authenticator) {
		return nil, false
	}
	return o.Authenticator, true
}

// HasAuthenticator returns a boolean if a field has been set.
func (o *AuthenticationExecutionRepresentation) HasAuthenticator() bool {
	if o != nil && !IsNil(o.Authenticator) {
		return true
	}

	return false
}

// SetAuthenticator gets a reference to the given string and assigns it to the Authenticator field.
func (o *AuthenticationExecutionRepresentation) SetAuthenticator(v string) {
	o.Authenticator = &v
}

// GetAuthenticatorFlow returns the AuthenticatorFlow field value if set, zero value otherwise.
func (o *AuthenticationExecutionRepresentation) GetAuthenticatorFlow() bool {
	if o == nil || IsNil(o.AuthenticatorFlow) {
		var ret bool
		return ret
	}
	return *o.AuthenticatorFlow
}

// GetAuthenticatorFlowOk returns a tuple with the AuthenticatorFlow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationExecutionRepresentation) GetAuthenticatorFlowOk() (*bool, bool) {
	if o == nil || IsNil(o.AuthenticatorFlow) {
		return nil, false
	}
	return o.AuthenticatorFlow, true
}

// HasAuthenticatorFlow returns a boolean if a field has been set.
func (o *AuthenticationExecutionRepresentation) HasAuthenticatorFlow() bool {
	if o != nil && !IsNil(o.AuthenticatorFlow) {
		return true
	}

	return false
}

// SetAuthenticatorFlow gets a reference to the given bool and assigns it to the AuthenticatorFlow field.
func (o *AuthenticationExecutionRepresentation) SetAuthenticatorFlow(v bool) {
	o.AuthenticatorFlow = &v
}

// GetRequirement returns the Requirement field value if set, zero value otherwise.
func (o *AuthenticationExecutionRepresentation) GetRequirement() string {
	if o == nil || IsNil(o.Requirement) {
		var ret string
		return ret
	}
	return *o.Requirement
}

// GetRequirementOk returns a tuple with the Requirement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationExecutionRepresentation) GetRequirementOk() (*string, bool) {
	if o == nil || IsNil(o.Requirement) {
		return nil, false
	}
	return o.Requirement, true
}

// HasRequirement returns a boolean if a field has been set.
func (o *AuthenticationExecutionRepresentation) HasRequirement() bool {
	if o != nil && !IsNil(o.Requirement) {
		return true
	}

	return false
}

// SetRequirement gets a reference to the given string and assigns it to the Requirement field.
func (o *AuthenticationExecutionRepresentation) SetRequirement(v string) {
	o.Requirement = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *AuthenticationExecutionRepresentation) GetPriority() int32 {
	if o == nil || IsNil(o.Priority) {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationExecutionRepresentation) GetPriorityOk() (*int32, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *AuthenticationExecutionRepresentation) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *AuthenticationExecutionRepresentation) SetPriority(v int32) {
	o.Priority = &v
}

// GetAutheticatorFlow returns the AutheticatorFlow field value if set, zero value otherwise.
func (o *AuthenticationExecutionRepresentation) GetAutheticatorFlow() bool {
	if o == nil || IsNil(o.AutheticatorFlow) {
		var ret bool
		return ret
	}
	return *o.AutheticatorFlow
}

// GetAutheticatorFlowOk returns a tuple with the AutheticatorFlow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationExecutionRepresentation) GetAutheticatorFlowOk() (*bool, bool) {
	if o == nil || IsNil(o.AutheticatorFlow) {
		return nil, false
	}
	return o.AutheticatorFlow, true
}

// HasAutheticatorFlow returns a boolean if a field has been set.
func (o *AuthenticationExecutionRepresentation) HasAutheticatorFlow() bool {
	if o != nil && !IsNil(o.AutheticatorFlow) {
		return true
	}

	return false
}

// SetAutheticatorFlow gets a reference to the given bool and assigns it to the AutheticatorFlow field.
func (o *AuthenticationExecutionRepresentation) SetAutheticatorFlow(v bool) {
	o.AutheticatorFlow = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AuthenticationExecutionRepresentation) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationExecutionRepresentation) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AuthenticationExecutionRepresentation) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AuthenticationExecutionRepresentation) SetId(v string) {
	o.Id = &v
}

// GetFlowId returns the FlowId field value if set, zero value otherwise.
func (o *AuthenticationExecutionRepresentation) GetFlowId() string {
	if o == nil || IsNil(o.FlowId) {
		var ret string
		return ret
	}
	return *o.FlowId
}

// GetFlowIdOk returns a tuple with the FlowId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationExecutionRepresentation) GetFlowIdOk() (*string, bool) {
	if o == nil || IsNil(o.FlowId) {
		return nil, false
	}
	return o.FlowId, true
}

// HasFlowId returns a boolean if a field has been set.
func (o *AuthenticationExecutionRepresentation) HasFlowId() bool {
	if o != nil && !IsNil(o.FlowId) {
		return true
	}

	return false
}

// SetFlowId gets a reference to the given string and assigns it to the FlowId field.
func (o *AuthenticationExecutionRepresentation) SetFlowId(v string) {
	o.FlowId = &v
}

// GetParentFlow returns the ParentFlow field value if set, zero value otherwise.
func (o *AuthenticationExecutionRepresentation) GetParentFlow() string {
	if o == nil || IsNil(o.ParentFlow) {
		var ret string
		return ret
	}
	return *o.ParentFlow
}

// GetParentFlowOk returns a tuple with the ParentFlow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationExecutionRepresentation) GetParentFlowOk() (*string, bool) {
	if o == nil || IsNil(o.ParentFlow) {
		return nil, false
	}
	return o.ParentFlow, true
}

// HasParentFlow returns a boolean if a field has been set.
func (o *AuthenticationExecutionRepresentation) HasParentFlow() bool {
	if o != nil && !IsNil(o.ParentFlow) {
		return true
	}

	return false
}

// SetParentFlow gets a reference to the given string and assigns it to the ParentFlow field.
func (o *AuthenticationExecutionRepresentation) SetParentFlow(v string) {
	o.ParentFlow = &v
}

func (o AuthenticationExecutionRepresentation) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthenticationExecutionRepresentation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuthenticatorConfig) {
		toSerialize["authenticatorConfig"] = o.AuthenticatorConfig
	}
	if !IsNil(o.Authenticator) {
		toSerialize["authenticator"] = o.Authenticator
	}
	if !IsNil(o.AuthenticatorFlow) {
		toSerialize["authenticatorFlow"] = o.AuthenticatorFlow
	}
	if !IsNil(o.Requirement) {
		toSerialize["requirement"] = o.Requirement
	}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	if !IsNil(o.AutheticatorFlow) {
		toSerialize["autheticatorFlow"] = o.AutheticatorFlow
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.FlowId) {
		toSerialize["flowId"] = o.FlowId
	}
	if !IsNil(o.ParentFlow) {
		toSerialize["parentFlow"] = o.ParentFlow
	}
	return toSerialize, nil
}

type NullableAuthenticationExecutionRepresentation struct {
	value *AuthenticationExecutionRepresentation
	isSet bool
}

func (v NullableAuthenticationExecutionRepresentation) Get() *AuthenticationExecutionRepresentation {
	return v.value
}

func (v *NullableAuthenticationExecutionRepresentation) Set(val *AuthenticationExecutionRepresentation) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthenticationExecutionRepresentation) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthenticationExecutionRepresentation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthenticationExecutionRepresentation(val *AuthenticationExecutionRepresentation) *NullableAuthenticationExecutionRepresentation {
	return &NullableAuthenticationExecutionRepresentation{value: val, isSet: true}
}

func (v NullableAuthenticationExecutionRepresentation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthenticationExecutionRepresentation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
