/*
Keycloak Admin REST API

This is a REST API reference for the Keycloak Admin REST API.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the IdentityProviderRepresentation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdentityProviderRepresentation{}

// IdentityProviderRepresentation struct for IdentityProviderRepresentation
type IdentityProviderRepresentation struct {
	Alias                       *string            `json:"alias,omitempty"`
	DisplayName                 *string            `json:"displayName,omitempty"`
	InternalId                  *string            `json:"internalId,omitempty"`
	ProviderId                  *string            `json:"providerId,omitempty"`
	Enabled                     *bool              `json:"enabled,omitempty"`
	UpdateProfileFirstLoginMode *string            `json:"updateProfileFirstLoginMode,omitempty"`
	TrustEmail                  *bool              `json:"trustEmail,omitempty"`
	StoreToken                  *bool              `json:"storeToken,omitempty"`
	AddReadTokenRoleOnCreate    *bool              `json:"addReadTokenRoleOnCreate,omitempty"`
	AuthenticateByDefault       *bool              `json:"authenticateByDefault,omitempty"`
	LinkOnly                    *bool              `json:"linkOnly,omitempty"`
	FirstBrokerLoginFlowAlias   *string            `json:"firstBrokerLoginFlowAlias,omitempty"`
	PostBrokerLoginFlowAlias    *string            `json:"postBrokerLoginFlowAlias,omitempty"`
	Config                      *map[string]string `json:"config,omitempty"`
	UpdateProfileFirstLogin     *bool              `json:"updateProfileFirstLogin,omitempty"`
}

// NewIdentityProviderRepresentation instantiates a new IdentityProviderRepresentation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityProviderRepresentation() *IdentityProviderRepresentation {
	this := IdentityProviderRepresentation{}
	return &this
}

// NewIdentityProviderRepresentationWithDefaults instantiates a new IdentityProviderRepresentation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityProviderRepresentationWithDefaults() *IdentityProviderRepresentation {
	this := IdentityProviderRepresentation{}
	return &this
}

// GetAlias returns the Alias field value if set, zero value otherwise.
func (o *IdentityProviderRepresentation) GetAlias() string {
	if o == nil || IsNil(o.Alias) {
		var ret string
		return ret
	}
	return *o.Alias
}

// GetAliasOk returns a tuple with the Alias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderRepresentation) GetAliasOk() (*string, bool) {
	if o == nil || IsNil(o.Alias) {
		return nil, false
	}
	return o.Alias, true
}

// HasAlias returns a boolean if a field has been set.
func (o *IdentityProviderRepresentation) HasAlias() bool {
	if o != nil && !IsNil(o.Alias) {
		return true
	}

	return false
}

// SetAlias gets a reference to the given string and assigns it to the Alias field.
func (o *IdentityProviderRepresentation) SetAlias(v string) {
	o.Alias = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *IdentityProviderRepresentation) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderRepresentation) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *IdentityProviderRepresentation) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *IdentityProviderRepresentation) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetInternalId returns the InternalId field value if set, zero value otherwise.
func (o *IdentityProviderRepresentation) GetInternalId() string {
	if o == nil || IsNil(o.InternalId) {
		var ret string
		return ret
	}
	return *o.InternalId
}

// GetInternalIdOk returns a tuple with the InternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderRepresentation) GetInternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.InternalId) {
		return nil, false
	}
	return o.InternalId, true
}

// HasInternalId returns a boolean if a field has been set.
func (o *IdentityProviderRepresentation) HasInternalId() bool {
	if o != nil && !IsNil(o.InternalId) {
		return true
	}

	return false
}

// SetInternalId gets a reference to the given string and assigns it to the InternalId field.
func (o *IdentityProviderRepresentation) SetInternalId(v string) {
	o.InternalId = &v
}

// GetProviderId returns the ProviderId field value if set, zero value otherwise.
func (o *IdentityProviderRepresentation) GetProviderId() string {
	if o == nil || IsNil(o.ProviderId) {
		var ret string
		return ret
	}
	return *o.ProviderId
}

// GetProviderIdOk returns a tuple with the ProviderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderRepresentation) GetProviderIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProviderId) {
		return nil, false
	}
	return o.ProviderId, true
}

// HasProviderId returns a boolean if a field has been set.
func (o *IdentityProviderRepresentation) HasProviderId() bool {
	if o != nil && !IsNil(o.ProviderId) {
		return true
	}

	return false
}

// SetProviderId gets a reference to the given string and assigns it to the ProviderId field.
func (o *IdentityProviderRepresentation) SetProviderId(v string) {
	o.ProviderId = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *IdentityProviderRepresentation) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderRepresentation) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *IdentityProviderRepresentation) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *IdentityProviderRepresentation) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetUpdateProfileFirstLoginMode returns the UpdateProfileFirstLoginMode field value if set, zero value otherwise.
func (o *IdentityProviderRepresentation) GetUpdateProfileFirstLoginMode() string {
	if o == nil || IsNil(o.UpdateProfileFirstLoginMode) {
		var ret string
		return ret
	}
	return *o.UpdateProfileFirstLoginMode
}

// GetUpdateProfileFirstLoginModeOk returns a tuple with the UpdateProfileFirstLoginMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderRepresentation) GetUpdateProfileFirstLoginModeOk() (*string, bool) {
	if o == nil || IsNil(o.UpdateProfileFirstLoginMode) {
		return nil, false
	}
	return o.UpdateProfileFirstLoginMode, true
}

// HasUpdateProfileFirstLoginMode returns a boolean if a field has been set.
func (o *IdentityProviderRepresentation) HasUpdateProfileFirstLoginMode() bool {
	if o != nil && !IsNil(o.UpdateProfileFirstLoginMode) {
		return true
	}

	return false
}

// SetUpdateProfileFirstLoginMode gets a reference to the given string and assigns it to the UpdateProfileFirstLoginMode field.
func (o *IdentityProviderRepresentation) SetUpdateProfileFirstLoginMode(v string) {
	o.UpdateProfileFirstLoginMode = &v
}

// GetTrustEmail returns the TrustEmail field value if set, zero value otherwise.
func (o *IdentityProviderRepresentation) GetTrustEmail() bool {
	if o == nil || IsNil(o.TrustEmail) {
		var ret bool
		return ret
	}
	return *o.TrustEmail
}

// GetTrustEmailOk returns a tuple with the TrustEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderRepresentation) GetTrustEmailOk() (*bool, bool) {
	if o == nil || IsNil(o.TrustEmail) {
		return nil, false
	}
	return o.TrustEmail, true
}

// HasTrustEmail returns a boolean if a field has been set.
func (o *IdentityProviderRepresentation) HasTrustEmail() bool {
	if o != nil && !IsNil(o.TrustEmail) {
		return true
	}

	return false
}

// SetTrustEmail gets a reference to the given bool and assigns it to the TrustEmail field.
func (o *IdentityProviderRepresentation) SetTrustEmail(v bool) {
	o.TrustEmail = &v
}

// GetStoreToken returns the StoreToken field value if set, zero value otherwise.
func (o *IdentityProviderRepresentation) GetStoreToken() bool {
	if o == nil || IsNil(o.StoreToken) {
		var ret bool
		return ret
	}
	return *o.StoreToken
}

// GetStoreTokenOk returns a tuple with the StoreToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderRepresentation) GetStoreTokenOk() (*bool, bool) {
	if o == nil || IsNil(o.StoreToken) {
		return nil, false
	}
	return o.StoreToken, true
}

// HasStoreToken returns a boolean if a field has been set.
func (o *IdentityProviderRepresentation) HasStoreToken() bool {
	if o != nil && !IsNil(o.StoreToken) {
		return true
	}

	return false
}

// SetStoreToken gets a reference to the given bool and assigns it to the StoreToken field.
func (o *IdentityProviderRepresentation) SetStoreToken(v bool) {
	o.StoreToken = &v
}

// GetAddReadTokenRoleOnCreate returns the AddReadTokenRoleOnCreate field value if set, zero value otherwise.
func (o *IdentityProviderRepresentation) GetAddReadTokenRoleOnCreate() bool {
	if o == nil || IsNil(o.AddReadTokenRoleOnCreate) {
		var ret bool
		return ret
	}
	return *o.AddReadTokenRoleOnCreate
}

// GetAddReadTokenRoleOnCreateOk returns a tuple with the AddReadTokenRoleOnCreate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderRepresentation) GetAddReadTokenRoleOnCreateOk() (*bool, bool) {
	if o == nil || IsNil(o.AddReadTokenRoleOnCreate) {
		return nil, false
	}
	return o.AddReadTokenRoleOnCreate, true
}

// HasAddReadTokenRoleOnCreate returns a boolean if a field has been set.
func (o *IdentityProviderRepresentation) HasAddReadTokenRoleOnCreate() bool {
	if o != nil && !IsNil(o.AddReadTokenRoleOnCreate) {
		return true
	}

	return false
}

// SetAddReadTokenRoleOnCreate gets a reference to the given bool and assigns it to the AddReadTokenRoleOnCreate field.
func (o *IdentityProviderRepresentation) SetAddReadTokenRoleOnCreate(v bool) {
	o.AddReadTokenRoleOnCreate = &v
}

// GetAuthenticateByDefault returns the AuthenticateByDefault field value if set, zero value otherwise.
func (o *IdentityProviderRepresentation) GetAuthenticateByDefault() bool {
	if o == nil || IsNil(o.AuthenticateByDefault) {
		var ret bool
		return ret
	}
	return *o.AuthenticateByDefault
}

// GetAuthenticateByDefaultOk returns a tuple with the AuthenticateByDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderRepresentation) GetAuthenticateByDefaultOk() (*bool, bool) {
	if o == nil || IsNil(o.AuthenticateByDefault) {
		return nil, false
	}
	return o.AuthenticateByDefault, true
}

// HasAuthenticateByDefault returns a boolean if a field has been set.
func (o *IdentityProviderRepresentation) HasAuthenticateByDefault() bool {
	if o != nil && !IsNil(o.AuthenticateByDefault) {
		return true
	}

	return false
}

// SetAuthenticateByDefault gets a reference to the given bool and assigns it to the AuthenticateByDefault field.
func (o *IdentityProviderRepresentation) SetAuthenticateByDefault(v bool) {
	o.AuthenticateByDefault = &v
}

// GetLinkOnly returns the LinkOnly field value if set, zero value otherwise.
func (o *IdentityProviderRepresentation) GetLinkOnly() bool {
	if o == nil || IsNil(o.LinkOnly) {
		var ret bool
		return ret
	}
	return *o.LinkOnly
}

// GetLinkOnlyOk returns a tuple with the LinkOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderRepresentation) GetLinkOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.LinkOnly) {
		return nil, false
	}
	return o.LinkOnly, true
}

// HasLinkOnly returns a boolean if a field has been set.
func (o *IdentityProviderRepresentation) HasLinkOnly() bool {
	if o != nil && !IsNil(o.LinkOnly) {
		return true
	}

	return false
}

// SetLinkOnly gets a reference to the given bool and assigns it to the LinkOnly field.
func (o *IdentityProviderRepresentation) SetLinkOnly(v bool) {
	o.LinkOnly = &v
}

// GetFirstBrokerLoginFlowAlias returns the FirstBrokerLoginFlowAlias field value if set, zero value otherwise.
func (o *IdentityProviderRepresentation) GetFirstBrokerLoginFlowAlias() string {
	if o == nil || IsNil(o.FirstBrokerLoginFlowAlias) {
		var ret string
		return ret
	}
	return *o.FirstBrokerLoginFlowAlias
}

// GetFirstBrokerLoginFlowAliasOk returns a tuple with the FirstBrokerLoginFlowAlias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderRepresentation) GetFirstBrokerLoginFlowAliasOk() (*string, bool) {
	if o == nil || IsNil(o.FirstBrokerLoginFlowAlias) {
		return nil, false
	}
	return o.FirstBrokerLoginFlowAlias, true
}

// HasFirstBrokerLoginFlowAlias returns a boolean if a field has been set.
func (o *IdentityProviderRepresentation) HasFirstBrokerLoginFlowAlias() bool {
	if o != nil && !IsNil(o.FirstBrokerLoginFlowAlias) {
		return true
	}

	return false
}

// SetFirstBrokerLoginFlowAlias gets a reference to the given string and assigns it to the FirstBrokerLoginFlowAlias field.
func (o *IdentityProviderRepresentation) SetFirstBrokerLoginFlowAlias(v string) {
	o.FirstBrokerLoginFlowAlias = &v
}

// GetPostBrokerLoginFlowAlias returns the PostBrokerLoginFlowAlias field value if set, zero value otherwise.
func (o *IdentityProviderRepresentation) GetPostBrokerLoginFlowAlias() string {
	if o == nil || IsNil(o.PostBrokerLoginFlowAlias) {
		var ret string
		return ret
	}
	return *o.PostBrokerLoginFlowAlias
}

// GetPostBrokerLoginFlowAliasOk returns a tuple with the PostBrokerLoginFlowAlias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderRepresentation) GetPostBrokerLoginFlowAliasOk() (*string, bool) {
	if o == nil || IsNil(o.PostBrokerLoginFlowAlias) {
		return nil, false
	}
	return o.PostBrokerLoginFlowAlias, true
}

// HasPostBrokerLoginFlowAlias returns a boolean if a field has been set.
func (o *IdentityProviderRepresentation) HasPostBrokerLoginFlowAlias() bool {
	if o != nil && !IsNil(o.PostBrokerLoginFlowAlias) {
		return true
	}

	return false
}

// SetPostBrokerLoginFlowAlias gets a reference to the given string and assigns it to the PostBrokerLoginFlowAlias field.
func (o *IdentityProviderRepresentation) SetPostBrokerLoginFlowAlias(v string) {
	o.PostBrokerLoginFlowAlias = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *IdentityProviderRepresentation) GetConfig() map[string]string {
	if o == nil || IsNil(o.Config) {
		var ret map[string]string
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderRepresentation) GetConfigOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Config) {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *IdentityProviderRepresentation) HasConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given map[string]string and assigns it to the Config field.
func (o *IdentityProviderRepresentation) SetConfig(v map[string]string) {
	o.Config = &v
}

// GetUpdateProfileFirstLogin returns the UpdateProfileFirstLogin field value if set, zero value otherwise.
func (o *IdentityProviderRepresentation) GetUpdateProfileFirstLogin() bool {
	if o == nil || IsNil(o.UpdateProfileFirstLogin) {
		var ret bool
		return ret
	}
	return *o.UpdateProfileFirstLogin
}

// GetUpdateProfileFirstLoginOk returns a tuple with the UpdateProfileFirstLogin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderRepresentation) GetUpdateProfileFirstLoginOk() (*bool, bool) {
	if o == nil || IsNil(o.UpdateProfileFirstLogin) {
		return nil, false
	}
	return o.UpdateProfileFirstLogin, true
}

// HasUpdateProfileFirstLogin returns a boolean if a field has been set.
func (o *IdentityProviderRepresentation) HasUpdateProfileFirstLogin() bool {
	if o != nil && !IsNil(o.UpdateProfileFirstLogin) {
		return true
	}

	return false
}

// SetUpdateProfileFirstLogin gets a reference to the given bool and assigns it to the UpdateProfileFirstLogin field.
func (o *IdentityProviderRepresentation) SetUpdateProfileFirstLogin(v bool) {
	o.UpdateProfileFirstLogin = &v
}

func (o IdentityProviderRepresentation) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdentityProviderRepresentation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Alias) {
		toSerialize["alias"] = o.Alias
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.InternalId) {
		toSerialize["internalId"] = o.InternalId
	}
	if !IsNil(o.ProviderId) {
		toSerialize["providerId"] = o.ProviderId
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.UpdateProfileFirstLoginMode) {
		toSerialize["updateProfileFirstLoginMode"] = o.UpdateProfileFirstLoginMode
	}
	if !IsNil(o.TrustEmail) {
		toSerialize["trustEmail"] = o.TrustEmail
	}
	if !IsNil(o.StoreToken) {
		toSerialize["storeToken"] = o.StoreToken
	}
	if !IsNil(o.AddReadTokenRoleOnCreate) {
		toSerialize["addReadTokenRoleOnCreate"] = o.AddReadTokenRoleOnCreate
	}
	if !IsNil(o.AuthenticateByDefault) {
		toSerialize["authenticateByDefault"] = o.AuthenticateByDefault
	}
	if !IsNil(o.LinkOnly) {
		toSerialize["linkOnly"] = o.LinkOnly
	}
	if !IsNil(o.FirstBrokerLoginFlowAlias) {
		toSerialize["firstBrokerLoginFlowAlias"] = o.FirstBrokerLoginFlowAlias
	}
	if !IsNil(o.PostBrokerLoginFlowAlias) {
		toSerialize["postBrokerLoginFlowAlias"] = o.PostBrokerLoginFlowAlias
	}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	if !IsNil(o.UpdateProfileFirstLogin) {
		toSerialize["updateProfileFirstLogin"] = o.UpdateProfileFirstLogin
	}
	return toSerialize, nil
}

type NullableIdentityProviderRepresentation struct {
	value *IdentityProviderRepresentation
	isSet bool
}

func (v NullableIdentityProviderRepresentation) Get() *IdentityProviderRepresentation {
	return v.value
}

func (v *NullableIdentityProviderRepresentation) Set(val *IdentityProviderRepresentation) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityProviderRepresentation) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityProviderRepresentation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityProviderRepresentation(val *IdentityProviderRepresentation) *NullableIdentityProviderRepresentation {
	return &NullableIdentityProviderRepresentation{value: val, isSet: true}
}

func (v NullableIdentityProviderRepresentation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityProviderRepresentation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
