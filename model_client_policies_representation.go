/*
Keycloak Admin REST API

This is a REST API reference for the Keycloak Admin REST API.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ClientPoliciesRepresentation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClientPoliciesRepresentation{}

// ClientPoliciesRepresentation struct for ClientPoliciesRepresentation
type ClientPoliciesRepresentation struct {
	Policies []ClientPolicyRepresentation `json:"policies,omitempty"`
}

// NewClientPoliciesRepresentation instantiates a new ClientPoliciesRepresentation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientPoliciesRepresentation() *ClientPoliciesRepresentation {
	this := ClientPoliciesRepresentation{}
	return &this
}

// NewClientPoliciesRepresentationWithDefaults instantiates a new ClientPoliciesRepresentation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientPoliciesRepresentationWithDefaults() *ClientPoliciesRepresentation {
	this := ClientPoliciesRepresentation{}
	return &this
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
func (o *ClientPoliciesRepresentation) GetPolicies() []ClientPolicyRepresentation {
	if o == nil || IsNil(o.Policies) {
		var ret []ClientPolicyRepresentation
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientPoliciesRepresentation) GetPoliciesOk() ([]ClientPolicyRepresentation, bool) {
	if o == nil || IsNil(o.Policies) {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *ClientPoliciesRepresentation) HasPolicies() bool {
	if o != nil && !IsNil(o.Policies) {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []ClientPolicyRepresentation and assigns it to the Policies field.
func (o *ClientPoliciesRepresentation) SetPolicies(v []ClientPolicyRepresentation) {
	o.Policies = v
}

func (o ClientPoliciesRepresentation) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientPoliciesRepresentation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Policies) {
		toSerialize["policies"] = o.Policies
	}
	return toSerialize, nil
}

type NullableClientPoliciesRepresentation struct {
	value *ClientPoliciesRepresentation
	isSet bool
}

func (v NullableClientPoliciesRepresentation) Get() *ClientPoliciesRepresentation {
	return v.value
}

func (v *NullableClientPoliciesRepresentation) Set(val *ClientPoliciesRepresentation) {
	v.value = val
	v.isSet = true
}

func (v NullableClientPoliciesRepresentation) IsSet() bool {
	return v.isSet
}

func (v *NullableClientPoliciesRepresentation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientPoliciesRepresentation(val *ClientPoliciesRepresentation) *NullableClientPoliciesRepresentation {
	return &NullableClientPoliciesRepresentation{value: val, isSet: true}
}

func (v NullableClientPoliciesRepresentation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientPoliciesRepresentation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
