/*
Keycloak Admin REST API

This is a REST API reference for the Keycloak Admin REST API.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ClientPolicyConditionRepresentation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClientPolicyConditionRepresentation{}

// ClientPolicyConditionRepresentation struct for ClientPolicyConditionRepresentation
type ClientPolicyConditionRepresentation struct {
	Condition     *string                  `json:"condition,omitempty"`
	Configuration []map[string]interface{} `json:"configuration,omitempty"`
}

// NewClientPolicyConditionRepresentation instantiates a new ClientPolicyConditionRepresentation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientPolicyConditionRepresentation() *ClientPolicyConditionRepresentation {
	this := ClientPolicyConditionRepresentation{}
	return &this
}

// NewClientPolicyConditionRepresentationWithDefaults instantiates a new ClientPolicyConditionRepresentation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientPolicyConditionRepresentationWithDefaults() *ClientPolicyConditionRepresentation {
	this := ClientPolicyConditionRepresentation{}
	return &this
}

// GetCondition returns the Condition field value if set, zero value otherwise.
func (o *ClientPolicyConditionRepresentation) GetCondition() string {
	if o == nil || IsNil(o.Condition) {
		var ret string
		return ret
	}
	return *o.Condition
}

// GetConditionOk returns a tuple with the Condition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientPolicyConditionRepresentation) GetConditionOk() (*string, bool) {
	if o == nil || IsNil(o.Condition) {
		return nil, false
	}
	return o.Condition, true
}

// HasCondition returns a boolean if a field has been set.
func (o *ClientPolicyConditionRepresentation) HasCondition() bool {
	if o != nil && !IsNil(o.Condition) {
		return true
	}

	return false
}

// SetCondition gets a reference to the given string and assigns it to the Condition field.
func (o *ClientPolicyConditionRepresentation) SetCondition(v string) {
	o.Condition = &v
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *ClientPolicyConditionRepresentation) GetConfiguration() []map[string]interface{} {
	if o == nil || IsNil(o.Configuration) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientPolicyConditionRepresentation) GetConfigurationOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Configuration) {
		return nil, false
	}
	return o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *ClientPolicyConditionRepresentation) HasConfiguration() bool {
	if o != nil && !IsNil(o.Configuration) {
		return true
	}

	return false
}

// SetConfiguration gets a reference to the given []map[string]interface{} and assigns it to the Configuration field.
func (o *ClientPolicyConditionRepresentation) SetConfiguration(v []map[string]interface{}) {
	o.Configuration = v
}

func (o ClientPolicyConditionRepresentation) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientPolicyConditionRepresentation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Condition) {
		toSerialize["condition"] = o.Condition
	}
	if !IsNil(o.Configuration) {
		toSerialize["configuration"] = o.Configuration
	}
	return toSerialize, nil
}

type NullableClientPolicyConditionRepresentation struct {
	value *ClientPolicyConditionRepresentation
	isSet bool
}

func (v NullableClientPolicyConditionRepresentation) Get() *ClientPolicyConditionRepresentation {
	return v.value
}

func (v *NullableClientPolicyConditionRepresentation) Set(val *ClientPolicyConditionRepresentation) {
	v.value = val
	v.isSet = true
}

func (v NullableClientPolicyConditionRepresentation) IsSet() bool {
	return v.isSet
}

func (v *NullableClientPolicyConditionRepresentation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientPolicyConditionRepresentation(val *ClientPolicyConditionRepresentation) *NullableClientPolicyConditionRepresentation {
	return &NullableClientPolicyConditionRepresentation{value: val, isSet: true}
}

func (v NullableClientPolicyConditionRepresentation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientPolicyConditionRepresentation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
