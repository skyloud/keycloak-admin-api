/*
Keycloak Admin REST API

Testing AttackDetectionAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	openapiclient "github.com/GIT_USER_I
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_openapi_AttackDetectionAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test AttackDetectionAPIService DeleteBruteForceUser", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var realm string
		var userId string

		httpRes, err := apiClient.AttackDetectionAPI.DeleteBruteForceUser(context.Background(), realm, userId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AttackDetectionAPIService DeleteUsers", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var realm string

		httpRes, err := apiClient.AttackDetectionAPI.DeleteUsers(context.Background(), realm).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AttackDetectionAPIService GetBruteForceUser", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var realm string
		var userId string

		resp, httpRes, err := apiClient.AttackDetectionAPI.GetBruteForceUser(context.Background(), realm, userId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
