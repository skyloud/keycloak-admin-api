/*
Keycloak Admin REST API

This is a REST API reference for the Keycloak Admin REST API.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the IdentityProviderMapperRepresentation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdentityProviderMapperRepresentation{}

// IdentityProviderMapperRepresentation struct for IdentityProviderMapperRepresentation
type IdentityProviderMapperRepresentation struct {
	Id                     *string            `json:"id,omitempty"`
	Name                   *string            `json:"name,omitempty"`
	IdentityProviderAlias  *string            `json:"identityProviderAlias,omitempty"`
	IdentityProviderMapper *string            `json:"identityProviderMapper,omitempty"`
	Config                 *map[string]string `json:"config,omitempty"`
}

// NewIdentityProviderMapperRepresentation instantiates a new IdentityProviderMapperRepresentation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityProviderMapperRepresentation() *IdentityProviderMapperRepresentation {
	this := IdentityProviderMapperRepresentation{}
	return &this
}

// NewIdentityProviderMapperRepresentationWithDefaults instantiates a new IdentityProviderMapperRepresentation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityProviderMapperRepresentationWithDefaults() *IdentityProviderMapperRepresentation {
	this := IdentityProviderMapperRepresentation{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IdentityProviderMapperRepresentation) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderMapperRepresentation) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IdentityProviderMapperRepresentation) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *IdentityProviderMapperRepresentation) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IdentityProviderMapperRepresentation) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderMapperRepresentation) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IdentityProviderMapperRepresentation) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IdentityProviderMapperRepresentation) SetName(v string) {
	o.Name = &v
}

// GetIdentityProviderAlias returns the IdentityProviderAlias field value if set, zero value otherwise.
func (o *IdentityProviderMapperRepresentation) GetIdentityProviderAlias() string {
	if o == nil || IsNil(o.IdentityProviderAlias) {
		var ret string
		return ret
	}
	return *o.IdentityProviderAlias
}

// GetIdentityProviderAliasOk returns a tuple with the IdentityProviderAlias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderMapperRepresentation) GetIdentityProviderAliasOk() (*string, bool) {
	if o == nil || IsNil(o.IdentityProviderAlias) {
		return nil, false
	}
	return o.IdentityProviderAlias, true
}

// HasIdentityProviderAlias returns a boolean if a field has been set.
func (o *IdentityProviderMapperRepresentation) HasIdentityProviderAlias() bool {
	if o != nil && !IsNil(o.IdentityProviderAlias) {
		return true
	}

	return false
}

// SetIdentityProviderAlias gets a reference to the given string and assigns it to the IdentityProviderAlias field.
func (o *IdentityProviderMapperRepresentation) SetIdentityProviderAlias(v string) {
	o.IdentityProviderAlias = &v
}

// GetIdentityProviderMapper returns the IdentityProviderMapper field value if set, zero value otherwise.
func (o *IdentityProviderMapperRepresentation) GetIdentityProviderMapper() string {
	if o == nil || IsNil(o.IdentityProviderMapper) {
		var ret string
		return ret
	}
	return *o.IdentityProviderMapper
}

// GetIdentityProviderMapperOk returns a tuple with the IdentityProviderMapper field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderMapperRepresentation) GetIdentityProviderMapperOk() (*string, bool) {
	if o == nil || IsNil(o.IdentityProviderMapper) {
		return nil, false
	}
	return o.IdentityProviderMapper, true
}

// HasIdentityProviderMapper returns a boolean if a field has been set.
func (o *IdentityProviderMapperRepresentation) HasIdentityProviderMapper() bool {
	if o != nil && !IsNil(o.IdentityProviderMapper) {
		return true
	}

	return false
}

// SetIdentityProviderMapper gets a reference to the given string and assigns it to the IdentityProviderMapper field.
func (o *IdentityProviderMapperRepresentation) SetIdentityProviderMapper(v string) {
	o.IdentityProviderMapper = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *IdentityProviderMapperRepresentation) GetConfig() map[string]string {
	if o == nil || IsNil(o.Config) {
		var ret map[string]string
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProviderMapperRepresentation) GetConfigOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Config) {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *IdentityProviderMapperRepresentation) HasConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given map[string]string and assigns it to the Config field.
func (o *IdentityProviderMapperRepresentation) SetConfig(v map[string]string) {
	o.Config = &v
}

func (o IdentityProviderMapperRepresentation) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdentityProviderMapperRepresentation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.IdentityProviderAlias) {
		toSerialize["identityProviderAlias"] = o.IdentityProviderAlias
	}
	if !IsNil(o.IdentityProviderMapper) {
		toSerialize["identityProviderMapper"] = o.IdentityProviderMapper
	}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	return toSerialize, nil
}

type NullableIdentityProviderMapperRepresentation struct {
	value *IdentityProviderMapperRepresentation
	isSet bool
}

func (v NullableIdentityProviderMapperRepresentation) Get() *IdentityProviderMapperRepresentation {
	return v.value
}

func (v *NullableIdentityProviderMapperRepresentation) Set(val *IdentityProviderMapperRepresentation) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityProviderMapperRepresentation) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityProviderMapperRepresentation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityProviderMapperRepresentation(val *IdentityProviderMapperRepresentation) *NullableIdentityProviderMapperRepresentation {
	return &NullableIdentityProviderMapperRepresentation{value: val, isSet: true}
}

func (v NullableIdentityProviderMapperRepresentation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityProviderMapperRepresentation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
