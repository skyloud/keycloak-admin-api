/*
Keycloak Admin REST API

This is a REST API reference for the Keycloak Admin REST API.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OAuthClientRepresentation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OAuthClientRepresentation{}

// OAuthClientRepresentation struct for OAuthClientRepresentation
type OAuthClientRepresentation struct {
	Id                                    *string                          `json:"id,omitempty"`
	ClientId                              *string                          `json:"clientId,omitempty"`
	Description                           *string                          `json:"description,omitempty"`
	RootUrl                               *string                          `json:"rootUrl,omitempty"`
	AdminUrl                              *string                          `json:"adminUrl,omitempty"`
	BaseUrl                               *string                          `json:"baseUrl,omitempty"`
	SurrogateAuthRequired                 *bool                            `json:"surrogateAuthRequired,omitempty"`
	Enabled                               *bool                            `json:"enabled,omitempty"`
	AlwaysDisplayInConsole                *bool                            `json:"alwaysDisplayInConsole,omitempty"`
	ClientAuthenticatorType               *string                          `json:"clientAuthenticatorType,omitempty"`
	Secret                                *string                          `json:"secret,omitempty"`
	RegistrationAccessToken               *string                          `json:"registrationAccessToken,omitempty"`
	DefaultRoles                          []string                         `json:"defaultRoles,omitempty"`
	RedirectUris                          []string                         `json:"redirectUris,omitempty"`
	WebOrigins                            []string                         `json:"webOrigins,omitempty"`
	NotBefore                             *int32                           `json:"notBefore,omitempty"`
	BearerOnly                            *bool                            `json:"bearerOnly,omitempty"`
	ConsentRequired                       *bool                            `json:"consentRequired,omitempty"`
	StandardFlowEnabled                   *bool                            `json:"standardFlowEnabled,omitempty"`
	ImplicitFlowEnabled                   *bool                            `json:"implicitFlowEnabled,omitempty"`
	DirectAccessGrantsEnabled             *bool                            `json:"directAccessGrantsEnabled,omitempty"`
	ServiceAccountsEnabled                *bool                            `json:"serviceAccountsEnabled,omitempty"`
	Oauth2DeviceAuthorizationGrantEnabled *bool                            `json:"oauth2DeviceAuthorizationGrantEnabled,omitempty"`
	AuthorizationServicesEnabled          *bool                            `json:"authorizationServicesEnabled,omitempty"`
	DirectGrantsOnly                      *bool                            `json:"directGrantsOnly,omitempty"`
	PublicClient                          *bool                            `json:"publicClient,omitempty"`
	FrontchannelLogout                    *bool                            `json:"frontchannelLogout,omitempty"`
	Protocol                              *string                          `json:"protocol,omitempty"`
	Attributes                            *map[string]string               `json:"attributes,omitempty"`
	AuthenticationFlowBindingOverrides    *map[string]string               `json:"authenticationFlowBindingOverrides,omitempty"`
	FullScopeAllowed                      *bool                            `json:"fullScopeAllowed,omitempty"`
	NodeReRegistrationTimeout             *int32                           `json:"nodeReRegistrationTimeout,omitempty"`
	RegisteredNodes                       *map[string]int32                `json:"registeredNodes,omitempty"`
	ProtocolMappers                       []ProtocolMapperRepresentation   `json:"protocolMappers,omitempty"`
	ClientTemplate                        *string                          `json:"clientTemplate,omitempty"`
	UseTemplateConfig                     *bool                            `json:"useTemplateConfig,omitempty"`
	UseTemplateScope                      *bool                            `json:"useTemplateScope,omitempty"`
	UseTemplateMappers                    *bool                            `json:"useTemplateMappers,omitempty"`
	DefaultClientScopes                   []string                         `json:"defaultClientScopes,omitempty"`
	OptionalClientScopes                  []string                         `json:"optionalClientScopes,omitempty"`
	AuthorizationSettings                 *ResourceServerRepresentation    `json:"authorizationSettings,omitempty"`
	Access                                *map[string]bool                 `json:"access,omitempty"`
	Origin                                *string                          `json:"origin,omitempty"`
	Name                                  *string                          `json:"name,omitempty"`
	Claims                                *ApplicationRepresentationClaims `json:"claims,omitempty"`
}

// NewOAuthClientRepresentation instantiates a new OAuthClientRepresentation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOAuthClientRepresentation() *OAuthClientRepresentation {
	this := OAuthClientRepresentation{}
	return &this
}

// NewOAuthClientRepresentationWithDefaults instantiates a new OAuthClientRepresentation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOAuthClientRepresentationWithDefaults() *OAuthClientRepresentation {
	this := OAuthClientRepresentation{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *OAuthClientRepresentation) SetId(v string) {
	o.Id = &v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetClientId() string {
	if o == nil || IsNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasClientId() bool {
	if o != nil && !IsNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *OAuthClientRepresentation) SetClientId(v string) {
	o.ClientId = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *OAuthClientRepresentation) SetDescription(v string) {
	o.Description = &v
}

// GetRootUrl returns the RootUrl field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetRootUrl() string {
	if o == nil || IsNil(o.RootUrl) {
		var ret string
		return ret
	}
	return *o.RootUrl
}

// GetRootUrlOk returns a tuple with the RootUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetRootUrlOk() (*string, bool) {
	if o == nil || IsNil(o.RootUrl) {
		return nil, false
	}
	return o.RootUrl, true
}

// HasRootUrl returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasRootUrl() bool {
	if o != nil && !IsNil(o.RootUrl) {
		return true
	}

	return false
}

// SetRootUrl gets a reference to the given string and assigns it to the RootUrl field.
func (o *OAuthClientRepresentation) SetRootUrl(v string) {
	o.RootUrl = &v
}

// GetAdminUrl returns the AdminUrl field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetAdminUrl() string {
	if o == nil || IsNil(o.AdminUrl) {
		var ret string
		return ret
	}
	return *o.AdminUrl
}

// GetAdminUrlOk returns a tuple with the AdminUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetAdminUrlOk() (*string, bool) {
	if o == nil || IsNil(o.AdminUrl) {
		return nil, false
	}
	return o.AdminUrl, true
}

// HasAdminUrl returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasAdminUrl() bool {
	if o != nil && !IsNil(o.AdminUrl) {
		return true
	}

	return false
}

// SetAdminUrl gets a reference to the given string and assigns it to the AdminUrl field.
func (o *OAuthClientRepresentation) SetAdminUrl(v string) {
	o.AdminUrl = &v
}

// GetBaseUrl returns the BaseUrl field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetBaseUrl() string {
	if o == nil || IsNil(o.BaseUrl) {
		var ret string
		return ret
	}
	return *o.BaseUrl
}

// GetBaseUrlOk returns a tuple with the BaseUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetBaseUrlOk() (*string, bool) {
	if o == nil || IsNil(o.BaseUrl) {
		return nil, false
	}
	return o.BaseUrl, true
}

// HasBaseUrl returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasBaseUrl() bool {
	if o != nil && !IsNil(o.BaseUrl) {
		return true
	}

	return false
}

// SetBaseUrl gets a reference to the given string and assigns it to the BaseUrl field.
func (o *OAuthClientRepresentation) SetBaseUrl(v string) {
	o.BaseUrl = &v
}

// GetSurrogateAuthRequired returns the SurrogateAuthRequired field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetSurrogateAuthRequired() bool {
	if o == nil || IsNil(o.SurrogateAuthRequired) {
		var ret bool
		return ret
	}
	return *o.SurrogateAuthRequired
}

// GetSurrogateAuthRequiredOk returns a tuple with the SurrogateAuthRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetSurrogateAuthRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.SurrogateAuthRequired) {
		return nil, false
	}
	return o.SurrogateAuthRequired, true
}

// HasSurrogateAuthRequired returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasSurrogateAuthRequired() bool {
	if o != nil && !IsNil(o.SurrogateAuthRequired) {
		return true
	}

	return false
}

// SetSurrogateAuthRequired gets a reference to the given bool and assigns it to the SurrogateAuthRequired field.
func (o *OAuthClientRepresentation) SetSurrogateAuthRequired(v bool) {
	o.SurrogateAuthRequired = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *OAuthClientRepresentation) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetAlwaysDisplayInConsole returns the AlwaysDisplayInConsole field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetAlwaysDisplayInConsole() bool {
	if o == nil || IsNil(o.AlwaysDisplayInConsole) {
		var ret bool
		return ret
	}
	return *o.AlwaysDisplayInConsole
}

// GetAlwaysDisplayInConsoleOk returns a tuple with the AlwaysDisplayInConsole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetAlwaysDisplayInConsoleOk() (*bool, bool) {
	if o == nil || IsNil(o.AlwaysDisplayInConsole) {
		return nil, false
	}
	return o.AlwaysDisplayInConsole, true
}

// HasAlwaysDisplayInConsole returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasAlwaysDisplayInConsole() bool {
	if o != nil && !IsNil(o.AlwaysDisplayInConsole) {
		return true
	}

	return false
}

// SetAlwaysDisplayInConsole gets a reference to the given bool and assigns it to the AlwaysDisplayInConsole field.
func (o *OAuthClientRepresentation) SetAlwaysDisplayInConsole(v bool) {
	o.AlwaysDisplayInConsole = &v
}

// GetClientAuthenticatorType returns the ClientAuthenticatorType field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetClientAuthenticatorType() string {
	if o == nil || IsNil(o.ClientAuthenticatorType) {
		var ret string
		return ret
	}
	return *o.ClientAuthenticatorType
}

// GetClientAuthenticatorTypeOk returns a tuple with the ClientAuthenticatorType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetClientAuthenticatorTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ClientAuthenticatorType) {
		return nil, false
	}
	return o.ClientAuthenticatorType, true
}

// HasClientAuthenticatorType returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasClientAuthenticatorType() bool {
	if o != nil && !IsNil(o.ClientAuthenticatorType) {
		return true
	}

	return false
}

// SetClientAuthenticatorType gets a reference to the given string and assigns it to the ClientAuthenticatorType field.
func (o *OAuthClientRepresentation) SetClientAuthenticatorType(v string) {
	o.ClientAuthenticatorType = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetSecret() string {
	if o == nil || IsNil(o.Secret) {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetSecretOk() (*string, bool) {
	if o == nil || IsNil(o.Secret) {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasSecret() bool {
	if o != nil && !IsNil(o.Secret) {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *OAuthClientRepresentation) SetSecret(v string) {
	o.Secret = &v
}

// GetRegistrationAccessToken returns the RegistrationAccessToken field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetRegistrationAccessToken() string {
	if o == nil || IsNil(o.RegistrationAccessToken) {
		var ret string
		return ret
	}
	return *o.RegistrationAccessToken
}

// GetRegistrationAccessTokenOk returns a tuple with the RegistrationAccessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetRegistrationAccessTokenOk() (*string, bool) {
	if o == nil || IsNil(o.RegistrationAccessToken) {
		return nil, false
	}
	return o.RegistrationAccessToken, true
}

// HasRegistrationAccessToken returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasRegistrationAccessToken() bool {
	if o != nil && !IsNil(o.RegistrationAccessToken) {
		return true
	}

	return false
}

// SetRegistrationAccessToken gets a reference to the given string and assigns it to the RegistrationAccessToken field.
func (o *OAuthClientRepresentation) SetRegistrationAccessToken(v string) {
	o.RegistrationAccessToken = &v
}

// GetDefaultRoles returns the DefaultRoles field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetDefaultRoles() []string {
	if o == nil || IsNil(o.DefaultRoles) {
		var ret []string
		return ret
	}
	return o.DefaultRoles
}

// GetDefaultRolesOk returns a tuple with the DefaultRoles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetDefaultRolesOk() ([]string, bool) {
	if o == nil || IsNil(o.DefaultRoles) {
		return nil, false
	}
	return o.DefaultRoles, true
}

// HasDefaultRoles returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasDefaultRoles() bool {
	if o != nil && !IsNil(o.DefaultRoles) {
		return true
	}

	return false
}

// SetDefaultRoles gets a reference to the given []string and assigns it to the DefaultRoles field.
func (o *OAuthClientRepresentation) SetDefaultRoles(v []string) {
	o.DefaultRoles = v
}

// GetRedirectUris returns the RedirectUris field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetRedirectUris() []string {
	if o == nil || IsNil(o.RedirectUris) {
		var ret []string
		return ret
	}
	return o.RedirectUris
}

// GetRedirectUrisOk returns a tuple with the RedirectUris field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetRedirectUrisOk() ([]string, bool) {
	if o == nil || IsNil(o.RedirectUris) {
		return nil, false
	}
	return o.RedirectUris, true
}

// HasRedirectUris returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasRedirectUris() bool {
	if o != nil && !IsNil(o.RedirectUris) {
		return true
	}

	return false
}

// SetRedirectUris gets a reference to the given []string and assigns it to the RedirectUris field.
func (o *OAuthClientRepresentation) SetRedirectUris(v []string) {
	o.RedirectUris = v
}

// GetWebOrigins returns the WebOrigins field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetWebOrigins() []string {
	if o == nil || IsNil(o.WebOrigins) {
		var ret []string
		return ret
	}
	return o.WebOrigins
}

// GetWebOriginsOk returns a tuple with the WebOrigins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetWebOriginsOk() ([]string, bool) {
	if o == nil || IsNil(o.WebOrigins) {
		return nil, false
	}
	return o.WebOrigins, true
}

// HasWebOrigins returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasWebOrigins() bool {
	if o != nil && !IsNil(o.WebOrigins) {
		return true
	}

	return false
}

// SetWebOrigins gets a reference to the given []string and assigns it to the WebOrigins field.
func (o *OAuthClientRepresentation) SetWebOrigins(v []string) {
	o.WebOrigins = v
}

// GetNotBefore returns the NotBefore field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetNotBefore() int32 {
	if o == nil || IsNil(o.NotBefore) {
		var ret int32
		return ret
	}
	return *o.NotBefore
}

// GetNotBeforeOk returns a tuple with the NotBefore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetNotBeforeOk() (*int32, bool) {
	if o == nil || IsNil(o.NotBefore) {
		return nil, false
	}
	return o.NotBefore, true
}

// HasNotBefore returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasNotBefore() bool {
	if o != nil && !IsNil(o.NotBefore) {
		return true
	}

	return false
}

// SetNotBefore gets a reference to the given int32 and assigns it to the NotBefore field.
func (o *OAuthClientRepresentation) SetNotBefore(v int32) {
	o.NotBefore = &v
}

// GetBearerOnly returns the BearerOnly field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetBearerOnly() bool {
	if o == nil || IsNil(o.BearerOnly) {
		var ret bool
		return ret
	}
	return *o.BearerOnly
}

// GetBearerOnlyOk returns a tuple with the BearerOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetBearerOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.BearerOnly) {
		return nil, false
	}
	return o.BearerOnly, true
}

// HasBearerOnly returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasBearerOnly() bool {
	if o != nil && !IsNil(o.BearerOnly) {
		return true
	}

	return false
}

// SetBearerOnly gets a reference to the given bool and assigns it to the BearerOnly field.
func (o *OAuthClientRepresentation) SetBearerOnly(v bool) {
	o.BearerOnly = &v
}

// GetConsentRequired returns the ConsentRequired field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetConsentRequired() bool {
	if o == nil || IsNil(o.ConsentRequired) {
		var ret bool
		return ret
	}
	return *o.ConsentRequired
}

// GetConsentRequiredOk returns a tuple with the ConsentRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetConsentRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.ConsentRequired) {
		return nil, false
	}
	return o.ConsentRequired, true
}

// HasConsentRequired returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasConsentRequired() bool {
	if o != nil && !IsNil(o.ConsentRequired) {
		return true
	}

	return false
}

// SetConsentRequired gets a reference to the given bool and assigns it to the ConsentRequired field.
func (o *OAuthClientRepresentation) SetConsentRequired(v bool) {
	o.ConsentRequired = &v
}

// GetStandardFlowEnabled returns the StandardFlowEnabled field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetStandardFlowEnabled() bool {
	if o == nil || IsNil(o.StandardFlowEnabled) {
		var ret bool
		return ret
	}
	return *o.StandardFlowEnabled
}

// GetStandardFlowEnabledOk returns a tuple with the StandardFlowEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetStandardFlowEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.StandardFlowEnabled) {
		return nil, false
	}
	return o.StandardFlowEnabled, true
}

// HasStandardFlowEnabled returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasStandardFlowEnabled() bool {
	if o != nil && !IsNil(o.StandardFlowEnabled) {
		return true
	}

	return false
}

// SetStandardFlowEnabled gets a reference to the given bool and assigns it to the StandardFlowEnabled field.
func (o *OAuthClientRepresentation) SetStandardFlowEnabled(v bool) {
	o.StandardFlowEnabled = &v
}

// GetImplicitFlowEnabled returns the ImplicitFlowEnabled field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetImplicitFlowEnabled() bool {
	if o == nil || IsNil(o.ImplicitFlowEnabled) {
		var ret bool
		return ret
	}
	return *o.ImplicitFlowEnabled
}

// GetImplicitFlowEnabledOk returns a tuple with the ImplicitFlowEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetImplicitFlowEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ImplicitFlowEnabled) {
		return nil, false
	}
	return o.ImplicitFlowEnabled, true
}

// HasImplicitFlowEnabled returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasImplicitFlowEnabled() bool {
	if o != nil && !IsNil(o.ImplicitFlowEnabled) {
		return true
	}

	return false
}

// SetImplicitFlowEnabled gets a reference to the given bool and assigns it to the ImplicitFlowEnabled field.
func (o *OAuthClientRepresentation) SetImplicitFlowEnabled(v bool) {
	o.ImplicitFlowEnabled = &v
}

// GetDirectAccessGrantsEnabled returns the DirectAccessGrantsEnabled field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetDirectAccessGrantsEnabled() bool {
	if o == nil || IsNil(o.DirectAccessGrantsEnabled) {
		var ret bool
		return ret
	}
	return *o.DirectAccessGrantsEnabled
}

// GetDirectAccessGrantsEnabledOk returns a tuple with the DirectAccessGrantsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetDirectAccessGrantsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.DirectAccessGrantsEnabled) {
		return nil, false
	}
	return o.DirectAccessGrantsEnabled, true
}

// HasDirectAccessGrantsEnabled returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasDirectAccessGrantsEnabled() bool {
	if o != nil && !IsNil(o.DirectAccessGrantsEnabled) {
		return true
	}

	return false
}

// SetDirectAccessGrantsEnabled gets a reference to the given bool and assigns it to the DirectAccessGrantsEnabled field.
func (o *OAuthClientRepresentation) SetDirectAccessGrantsEnabled(v bool) {
	o.DirectAccessGrantsEnabled = &v
}

// GetServiceAccountsEnabled returns the ServiceAccountsEnabled field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetServiceAccountsEnabled() bool {
	if o == nil || IsNil(o.ServiceAccountsEnabled) {
		var ret bool
		return ret
	}
	return *o.ServiceAccountsEnabled
}

// GetServiceAccountsEnabledOk returns a tuple with the ServiceAccountsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetServiceAccountsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ServiceAccountsEnabled) {
		return nil, false
	}
	return o.ServiceAccountsEnabled, true
}

// HasServiceAccountsEnabled returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasServiceAccountsEnabled() bool {
	if o != nil && !IsNil(o.ServiceAccountsEnabled) {
		return true
	}

	return false
}

// SetServiceAccountsEnabled gets a reference to the given bool and assigns it to the ServiceAccountsEnabled field.
func (o *OAuthClientRepresentation) SetServiceAccountsEnabled(v bool) {
	o.ServiceAccountsEnabled = &v
}

// GetOauth2DeviceAuthorizationGrantEnabled returns the Oauth2DeviceAuthorizationGrantEnabled field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetOauth2DeviceAuthorizationGrantEnabled() bool {
	if o == nil || IsNil(o.Oauth2DeviceAuthorizationGrantEnabled) {
		var ret bool
		return ret
	}
	return *o.Oauth2DeviceAuthorizationGrantEnabled
}

// GetOauth2DeviceAuthorizationGrantEnabledOk returns a tuple with the Oauth2DeviceAuthorizationGrantEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetOauth2DeviceAuthorizationGrantEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Oauth2DeviceAuthorizationGrantEnabled) {
		return nil, false
	}
	return o.Oauth2DeviceAuthorizationGrantEnabled, true
}

// HasOauth2DeviceAuthorizationGrantEnabled returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasOauth2DeviceAuthorizationGrantEnabled() bool {
	if o != nil && !IsNil(o.Oauth2DeviceAuthorizationGrantEnabled) {
		return true
	}

	return false
}

// SetOauth2DeviceAuthorizationGrantEnabled gets a reference to the given bool and assigns it to the Oauth2DeviceAuthorizationGrantEnabled field.
func (o *OAuthClientRepresentation) SetOauth2DeviceAuthorizationGrantEnabled(v bool) {
	o.Oauth2DeviceAuthorizationGrantEnabled = &v
}

// GetAuthorizationServicesEnabled returns the AuthorizationServicesEnabled field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetAuthorizationServicesEnabled() bool {
	if o == nil || IsNil(o.AuthorizationServicesEnabled) {
		var ret bool
		return ret
	}
	return *o.AuthorizationServicesEnabled
}

// GetAuthorizationServicesEnabledOk returns a tuple with the AuthorizationServicesEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetAuthorizationServicesEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.AuthorizationServicesEnabled) {
		return nil, false
	}
	return o.AuthorizationServicesEnabled, true
}

// HasAuthorizationServicesEnabled returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasAuthorizationServicesEnabled() bool {
	if o != nil && !IsNil(o.AuthorizationServicesEnabled) {
		return true
	}

	return false
}

// SetAuthorizationServicesEnabled gets a reference to the given bool and assigns it to the AuthorizationServicesEnabled field.
func (o *OAuthClientRepresentation) SetAuthorizationServicesEnabled(v bool) {
	o.AuthorizationServicesEnabled = &v
}

// GetDirectGrantsOnly returns the DirectGrantsOnly field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetDirectGrantsOnly() bool {
	if o == nil || IsNil(o.DirectGrantsOnly) {
		var ret bool
		return ret
	}
	return *o.DirectGrantsOnly
}

// GetDirectGrantsOnlyOk returns a tuple with the DirectGrantsOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetDirectGrantsOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.DirectGrantsOnly) {
		return nil, false
	}
	return o.DirectGrantsOnly, true
}

// HasDirectGrantsOnly returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasDirectGrantsOnly() bool {
	if o != nil && !IsNil(o.DirectGrantsOnly) {
		return true
	}

	return false
}

// SetDirectGrantsOnly gets a reference to the given bool and assigns it to the DirectGrantsOnly field.
func (o *OAuthClientRepresentation) SetDirectGrantsOnly(v bool) {
	o.DirectGrantsOnly = &v
}

// GetPublicClient returns the PublicClient field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetPublicClient() bool {
	if o == nil || IsNil(o.PublicClient) {
		var ret bool
		return ret
	}
	return *o.PublicClient
}

// GetPublicClientOk returns a tuple with the PublicClient field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetPublicClientOk() (*bool, bool) {
	if o == nil || IsNil(o.PublicClient) {
		return nil, false
	}
	return o.PublicClient, true
}

// HasPublicClient returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasPublicClient() bool {
	if o != nil && !IsNil(o.PublicClient) {
		return true
	}

	return false
}

// SetPublicClient gets a reference to the given bool and assigns it to the PublicClient field.
func (o *OAuthClientRepresentation) SetPublicClient(v bool) {
	o.PublicClient = &v
}

// GetFrontchannelLogout returns the FrontchannelLogout field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetFrontchannelLogout() bool {
	if o == nil || IsNil(o.FrontchannelLogout) {
		var ret bool
		return ret
	}
	return *o.FrontchannelLogout
}

// GetFrontchannelLogoutOk returns a tuple with the FrontchannelLogout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetFrontchannelLogoutOk() (*bool, bool) {
	if o == nil || IsNil(o.FrontchannelLogout) {
		return nil, false
	}
	return o.FrontchannelLogout, true
}

// HasFrontchannelLogout returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasFrontchannelLogout() bool {
	if o != nil && !IsNil(o.FrontchannelLogout) {
		return true
	}

	return false
}

// SetFrontchannelLogout gets a reference to the given bool and assigns it to the FrontchannelLogout field.
func (o *OAuthClientRepresentation) SetFrontchannelLogout(v bool) {
	o.FrontchannelLogout = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetProtocol() string {
	if o == nil || IsNil(o.Protocol) {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetProtocolOk() (*string, bool) {
	if o == nil || IsNil(o.Protocol) {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasProtocol() bool {
	if o != nil && !IsNil(o.Protocol) {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *OAuthClientRepresentation) SetProtocol(v string) {
	o.Protocol = &v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetAttributes() map[string]string {
	if o == nil || IsNil(o.Attributes) {
		var ret map[string]string
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetAttributesOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Attributes) {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]string and assigns it to the Attributes field.
func (o *OAuthClientRepresentation) SetAttributes(v map[string]string) {
	o.Attributes = &v
}

// GetAuthenticationFlowBindingOverrides returns the AuthenticationFlowBindingOverrides field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetAuthenticationFlowBindingOverrides() map[string]string {
	if o == nil || IsNil(o.AuthenticationFlowBindingOverrides) {
		var ret map[string]string
		return ret
	}
	return *o.AuthenticationFlowBindingOverrides
}

// GetAuthenticationFlowBindingOverridesOk returns a tuple with the AuthenticationFlowBindingOverrides field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetAuthenticationFlowBindingOverridesOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.AuthenticationFlowBindingOverrides) {
		return nil, false
	}
	return o.AuthenticationFlowBindingOverrides, true
}

// HasAuthenticationFlowBindingOverrides returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasAuthenticationFlowBindingOverrides() bool {
	if o != nil && !IsNil(o.AuthenticationFlowBindingOverrides) {
		return true
	}

	return false
}

// SetAuthenticationFlowBindingOverrides gets a reference to the given map[string]string and assigns it to the AuthenticationFlowBindingOverrides field.
func (o *OAuthClientRepresentation) SetAuthenticationFlowBindingOverrides(v map[string]string) {
	o.AuthenticationFlowBindingOverrides = &v
}

// GetFullScopeAllowed returns the FullScopeAllowed field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetFullScopeAllowed() bool {
	if o == nil || IsNil(o.FullScopeAllowed) {
		var ret bool
		return ret
	}
	return *o.FullScopeAllowed
}

// GetFullScopeAllowedOk returns a tuple with the FullScopeAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetFullScopeAllowedOk() (*bool, bool) {
	if o == nil || IsNil(o.FullScopeAllowed) {
		return nil, false
	}
	return o.FullScopeAllowed, true
}

// HasFullScopeAllowed returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasFullScopeAllowed() bool {
	if o != nil && !IsNil(o.FullScopeAllowed) {
		return true
	}

	return false
}

// SetFullScopeAllowed gets a reference to the given bool and assigns it to the FullScopeAllowed field.
func (o *OAuthClientRepresentation) SetFullScopeAllowed(v bool) {
	o.FullScopeAllowed = &v
}

// GetNodeReRegistrationTimeout returns the NodeReRegistrationTimeout field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetNodeReRegistrationTimeout() int32 {
	if o == nil || IsNil(o.NodeReRegistrationTimeout) {
		var ret int32
		return ret
	}
	return *o.NodeReRegistrationTimeout
}

// GetNodeReRegistrationTimeoutOk returns a tuple with the NodeReRegistrationTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetNodeReRegistrationTimeoutOk() (*int32, bool) {
	if o == nil || IsNil(o.NodeReRegistrationTimeout) {
		return nil, false
	}
	return o.NodeReRegistrationTimeout, true
}

// HasNodeReRegistrationTimeout returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasNodeReRegistrationTimeout() bool {
	if o != nil && !IsNil(o.NodeReRegistrationTimeout) {
		return true
	}

	return false
}

// SetNodeReRegistrationTimeout gets a reference to the given int32 and assigns it to the NodeReRegistrationTimeout field.
func (o *OAuthClientRepresentation) SetNodeReRegistrationTimeout(v int32) {
	o.NodeReRegistrationTimeout = &v
}

// GetRegisteredNodes returns the RegisteredNodes field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetRegisteredNodes() map[string]int32 {
	if o == nil || IsNil(o.RegisteredNodes) {
		var ret map[string]int32
		return ret
	}
	return *o.RegisteredNodes
}

// GetRegisteredNodesOk returns a tuple with the RegisteredNodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetRegisteredNodesOk() (*map[string]int32, bool) {
	if o == nil || IsNil(o.RegisteredNodes) {
		return nil, false
	}
	return o.RegisteredNodes, true
}

// HasRegisteredNodes returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasRegisteredNodes() bool {
	if o != nil && !IsNil(o.RegisteredNodes) {
		return true
	}

	return false
}

// SetRegisteredNodes gets a reference to the given map[string]int32 and assigns it to the RegisteredNodes field.
func (o *OAuthClientRepresentation) SetRegisteredNodes(v map[string]int32) {
	o.RegisteredNodes = &v
}

// GetProtocolMappers returns the ProtocolMappers field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetProtocolMappers() []ProtocolMapperRepresentation {
	if o == nil || IsNil(o.ProtocolMappers) {
		var ret []ProtocolMapperRepresentation
		return ret
	}
	return o.ProtocolMappers
}

// GetProtocolMappersOk returns a tuple with the ProtocolMappers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetProtocolMappersOk() ([]ProtocolMapperRepresentation, bool) {
	if o == nil || IsNil(o.ProtocolMappers) {
		return nil, false
	}
	return o.ProtocolMappers, true
}

// HasProtocolMappers returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasProtocolMappers() bool {
	if o != nil && !IsNil(o.ProtocolMappers) {
		return true
	}

	return false
}

// SetProtocolMappers gets a reference to the given []ProtocolMapperRepresentation and assigns it to the ProtocolMappers field.
func (o *OAuthClientRepresentation) SetProtocolMappers(v []ProtocolMapperRepresentation) {
	o.ProtocolMappers = v
}

// GetClientTemplate returns the ClientTemplate field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetClientTemplate() string {
	if o == nil || IsNil(o.ClientTemplate) {
		var ret string
		return ret
	}
	return *o.ClientTemplate
}

// GetClientTemplateOk returns a tuple with the ClientTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetClientTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.ClientTemplate) {
		return nil, false
	}
	return o.ClientTemplate, true
}

// HasClientTemplate returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasClientTemplate() bool {
	if o != nil && !IsNil(o.ClientTemplate) {
		return true
	}

	return false
}

// SetClientTemplate gets a reference to the given string and assigns it to the ClientTemplate field.
func (o *OAuthClientRepresentation) SetClientTemplate(v string) {
	o.ClientTemplate = &v
}

// GetUseTemplateConfig returns the UseTemplateConfig field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetUseTemplateConfig() bool {
	if o == nil || IsNil(o.UseTemplateConfig) {
		var ret bool
		return ret
	}
	return *o.UseTemplateConfig
}

// GetUseTemplateConfigOk returns a tuple with the UseTemplateConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetUseTemplateConfigOk() (*bool, bool) {
	if o == nil || IsNil(o.UseTemplateConfig) {
		return nil, false
	}
	return o.UseTemplateConfig, true
}

// HasUseTemplateConfig returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasUseTemplateConfig() bool {
	if o != nil && !IsNil(o.UseTemplateConfig) {
		return true
	}

	return false
}

// SetUseTemplateConfig gets a reference to the given bool and assigns it to the UseTemplateConfig field.
func (o *OAuthClientRepresentation) SetUseTemplateConfig(v bool) {
	o.UseTemplateConfig = &v
}

// GetUseTemplateScope returns the UseTemplateScope field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetUseTemplateScope() bool {
	if o == nil || IsNil(o.UseTemplateScope) {
		var ret bool
		return ret
	}
	return *o.UseTemplateScope
}

// GetUseTemplateScopeOk returns a tuple with the UseTemplateScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetUseTemplateScopeOk() (*bool, bool) {
	if o == nil || IsNil(o.UseTemplateScope) {
		return nil, false
	}
	return o.UseTemplateScope, true
}

// HasUseTemplateScope returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasUseTemplateScope() bool {
	if o != nil && !IsNil(o.UseTemplateScope) {
		return true
	}

	return false
}

// SetUseTemplateScope gets a reference to the given bool and assigns it to the UseTemplateScope field.
func (o *OAuthClientRepresentation) SetUseTemplateScope(v bool) {
	o.UseTemplateScope = &v
}

// GetUseTemplateMappers returns the UseTemplateMappers field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetUseTemplateMappers() bool {
	if o == nil || IsNil(o.UseTemplateMappers) {
		var ret bool
		return ret
	}
	return *o.UseTemplateMappers
}

// GetUseTemplateMappersOk returns a tuple with the UseTemplateMappers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetUseTemplateMappersOk() (*bool, bool) {
	if o == nil || IsNil(o.UseTemplateMappers) {
		return nil, false
	}
	return o.UseTemplateMappers, true
}

// HasUseTemplateMappers returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasUseTemplateMappers() bool {
	if o != nil && !IsNil(o.UseTemplateMappers) {
		return true
	}

	return false
}

// SetUseTemplateMappers gets a reference to the given bool and assigns it to the UseTemplateMappers field.
func (o *OAuthClientRepresentation) SetUseTemplateMappers(v bool) {
	o.UseTemplateMappers = &v
}

// GetDefaultClientScopes returns the DefaultClientScopes field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetDefaultClientScopes() []string {
	if o == nil || IsNil(o.DefaultClientScopes) {
		var ret []string
		return ret
	}
	return o.DefaultClientScopes
}

// GetDefaultClientScopesOk returns a tuple with the DefaultClientScopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetDefaultClientScopesOk() ([]string, bool) {
	if o == nil || IsNil(o.DefaultClientScopes) {
		return nil, false
	}
	return o.DefaultClientScopes, true
}

// HasDefaultClientScopes returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasDefaultClientScopes() bool {
	if o != nil && !IsNil(o.DefaultClientScopes) {
		return true
	}

	return false
}

// SetDefaultClientScopes gets a reference to the given []string and assigns it to the DefaultClientScopes field.
func (o *OAuthClientRepresentation) SetDefaultClientScopes(v []string) {
	o.DefaultClientScopes = v
}

// GetOptionalClientScopes returns the OptionalClientScopes field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetOptionalClientScopes() []string {
	if o == nil || IsNil(o.OptionalClientScopes) {
		var ret []string
		return ret
	}
	return o.OptionalClientScopes
}

// GetOptionalClientScopesOk returns a tuple with the OptionalClientScopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetOptionalClientScopesOk() ([]string, bool) {
	if o == nil || IsNil(o.OptionalClientScopes) {
		return nil, false
	}
	return o.OptionalClientScopes, true
}

// HasOptionalClientScopes returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasOptionalClientScopes() bool {
	if o != nil && !IsNil(o.OptionalClientScopes) {
		return true
	}

	return false
}

// SetOptionalClientScopes gets a reference to the given []string and assigns it to the OptionalClientScopes field.
func (o *OAuthClientRepresentation) SetOptionalClientScopes(v []string) {
	o.OptionalClientScopes = v
}

// GetAuthorizationSettings returns the AuthorizationSettings field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetAuthorizationSettings() ResourceServerRepresentation {
	if o == nil || IsNil(o.AuthorizationSettings) {
		var ret ResourceServerRepresentation
		return ret
	}
	return *o.AuthorizationSettings
}

// GetAuthorizationSettingsOk returns a tuple with the AuthorizationSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetAuthorizationSettingsOk() (*ResourceServerRepresentation, bool) {
	if o == nil || IsNil(o.AuthorizationSettings) {
		return nil, false
	}
	return o.AuthorizationSettings, true
}

// HasAuthorizationSettings returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasAuthorizationSettings() bool {
	if o != nil && !IsNil(o.AuthorizationSettings) {
		return true
	}

	return false
}

// SetAuthorizationSettings gets a reference to the given ResourceServerRepresentation and assigns it to the AuthorizationSettings field.
func (o *OAuthClientRepresentation) SetAuthorizationSettings(v ResourceServerRepresentation) {
	o.AuthorizationSettings = &v
}

// GetAccess returns the Access field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetAccess() map[string]bool {
	if o == nil || IsNil(o.Access) {
		var ret map[string]bool
		return ret
	}
	return *o.Access
}

// GetAccessOk returns a tuple with the Access field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetAccessOk() (*map[string]bool, bool) {
	if o == nil || IsNil(o.Access) {
		return nil, false
	}
	return o.Access, true
}

// HasAccess returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasAccess() bool {
	if o != nil && !IsNil(o.Access) {
		return true
	}

	return false
}

// SetAccess gets a reference to the given map[string]bool and assigns it to the Access field.
func (o *OAuthClientRepresentation) SetAccess(v map[string]bool) {
	o.Access = &v
}

// GetOrigin returns the Origin field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetOrigin() string {
	if o == nil || IsNil(o.Origin) {
		var ret string
		return ret
	}
	return *o.Origin
}

// GetOriginOk returns a tuple with the Origin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetOriginOk() (*string, bool) {
	if o == nil || IsNil(o.Origin) {
		return nil, false
	}
	return o.Origin, true
}

// HasOrigin returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasOrigin() bool {
	if o != nil && !IsNil(o.Origin) {
		return true
	}

	return false
}

// SetOrigin gets a reference to the given string and assigns it to the Origin field.
func (o *OAuthClientRepresentation) SetOrigin(v string) {
	o.Origin = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OAuthClientRepresentation) SetName(v string) {
	o.Name = &v
}

// GetClaims returns the Claims field value if set, zero value otherwise.
func (o *OAuthClientRepresentation) GetClaims() ApplicationRepresentationClaims {
	if o == nil || IsNil(o.Claims) {
		var ret ApplicationRepresentationClaims
		return ret
	}
	return *o.Claims
}

// GetClaimsOk returns a tuple with the Claims field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientRepresentation) GetClaimsOk() (*ApplicationRepresentationClaims, bool) {
	if o == nil || IsNil(o.Claims) {
		return nil, false
	}
	return o.Claims, true
}

// HasClaims returns a boolean if a field has been set.
func (o *OAuthClientRepresentation) HasClaims() bool {
	if o != nil && !IsNil(o.Claims) {
		return true
	}

	return false
}

// SetClaims gets a reference to the given ApplicationRepresentationClaims and assigns it to the Claims field.
func (o *OAuthClientRepresentation) SetClaims(v ApplicationRepresentationClaims) {
	o.Claims = &v
}

func (o OAuthClientRepresentation) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OAuthClientRepresentation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ClientId) {
		toSerialize["clientId"] = o.ClientId
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.RootUrl) {
		toSerialize["rootUrl"] = o.RootUrl
	}
	if !IsNil(o.AdminUrl) {
		toSerialize["adminUrl"] = o.AdminUrl
	}
	if !IsNil(o.BaseUrl) {
		toSerialize["baseUrl"] = o.BaseUrl
	}
	if !IsNil(o.SurrogateAuthRequired) {
		toSerialize["surrogateAuthRequired"] = o.SurrogateAuthRequired
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.AlwaysDisplayInConsole) {
		toSerialize["alwaysDisplayInConsole"] = o.AlwaysDisplayInConsole
	}
	if !IsNil(o.ClientAuthenticatorType) {
		toSerialize["clientAuthenticatorType"] = o.ClientAuthenticatorType
	}
	if !IsNil(o.Secret) {
		toSerialize["secret"] = o.Secret
	}
	if !IsNil(o.RegistrationAccessToken) {
		toSerialize["registrationAccessToken"] = o.RegistrationAccessToken
	}
	if !IsNil(o.DefaultRoles) {
		toSerialize["defaultRoles"] = o.DefaultRoles
	}
	if !IsNil(o.RedirectUris) {
		toSerialize["redirectUris"] = o.RedirectUris
	}
	if !IsNil(o.WebOrigins) {
		toSerialize["webOrigins"] = o.WebOrigins
	}
	if !IsNil(o.NotBefore) {
		toSerialize["notBefore"] = o.NotBefore
	}
	if !IsNil(o.BearerOnly) {
		toSerialize["bearerOnly"] = o.BearerOnly
	}
	if !IsNil(o.ConsentRequired) {
		toSerialize["consentRequired"] = o.ConsentRequired
	}
	if !IsNil(o.StandardFlowEnabled) {
		toSerialize["standardFlowEnabled"] = o.StandardFlowEnabled
	}
	if !IsNil(o.ImplicitFlowEnabled) {
		toSerialize["implicitFlowEnabled"] = o.ImplicitFlowEnabled
	}
	if !IsNil(o.DirectAccessGrantsEnabled) {
		toSerialize["directAccessGrantsEnabled"] = o.DirectAccessGrantsEnabled
	}
	if !IsNil(o.ServiceAccountsEnabled) {
		toSerialize["serviceAccountsEnabled"] = o.ServiceAccountsEnabled
	}
	if !IsNil(o.Oauth2DeviceAuthorizationGrantEnabled) {
		toSerialize["oauth2DeviceAuthorizationGrantEnabled"] = o.Oauth2DeviceAuthorizationGrantEnabled
	}
	if !IsNil(o.AuthorizationServicesEnabled) {
		toSerialize["authorizationServicesEnabled"] = o.AuthorizationServicesEnabled
	}
	if !IsNil(o.DirectGrantsOnly) {
		toSerialize["directGrantsOnly"] = o.DirectGrantsOnly
	}
	if !IsNil(o.PublicClient) {
		toSerialize["publicClient"] = o.PublicClient
	}
	if !IsNil(o.FrontchannelLogout) {
		toSerialize["frontchannelLogout"] = o.FrontchannelLogout
	}
	if !IsNil(o.Protocol) {
		toSerialize["protocol"] = o.Protocol
	}
	if !IsNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	if !IsNil(o.AuthenticationFlowBindingOverrides) {
		toSerialize["authenticationFlowBindingOverrides"] = o.AuthenticationFlowBindingOverrides
	}
	if !IsNil(o.FullScopeAllowed) {
		toSerialize["fullScopeAllowed"] = o.FullScopeAllowed
	}
	if !IsNil(o.NodeReRegistrationTimeout) {
		toSerialize["nodeReRegistrationTimeout"] = o.NodeReRegistrationTimeout
	}
	if !IsNil(o.RegisteredNodes) {
		toSerialize["registeredNodes"] = o.RegisteredNodes
	}
	if !IsNil(o.ProtocolMappers) {
		toSerialize["protocolMappers"] = o.ProtocolMappers
	}
	if !IsNil(o.ClientTemplate) {
		toSerialize["clientTemplate"] = o.ClientTemplate
	}
	if !IsNil(o.UseTemplateConfig) {
		toSerialize["useTemplateConfig"] = o.UseTemplateConfig
	}
	if !IsNil(o.UseTemplateScope) {
		toSerialize["useTemplateScope"] = o.UseTemplateScope
	}
	if !IsNil(o.UseTemplateMappers) {
		toSerialize["useTemplateMappers"] = o.UseTemplateMappers
	}
	if !IsNil(o.DefaultClientScopes) {
		toSerialize["defaultClientScopes"] = o.DefaultClientScopes
	}
	if !IsNil(o.OptionalClientScopes) {
		toSerialize["optionalClientScopes"] = o.OptionalClientScopes
	}
	if !IsNil(o.AuthorizationSettings) {
		toSerialize["authorizationSettings"] = o.AuthorizationSettings
	}
	if !IsNil(o.Access) {
		toSerialize["access"] = o.Access
	}
	if !IsNil(o.Origin) {
		toSerialize["origin"] = o.Origin
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Claims) {
		toSerialize["claims"] = o.Claims
	}
	return toSerialize, nil
}

type NullableOAuthClientRepresentation struct {
	value *OAuthClientRepresentation
	isSet bool
}

func (v NullableOAuthClientRepresentation) Get() *OAuthClientRepresentation {
	return v.value
}

func (v *NullableOAuthClientRepresentation) Set(val *OAuthClientRepresentation) {
	v.value = val
	v.isSet = true
}

func (v NullableOAuthClientRepresentation) IsSet() bool {
	return v.isSet
}

func (v *NullableOAuthClientRepresentation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOAuthClientRepresentation(val *OAuthClientRepresentation) *NullableOAuthClientRepresentation {
	return &NullableOAuthClientRepresentation{value: val, isSet: true}
}

func (v NullableOAuthClientRepresentation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOAuthClientRepresentation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
