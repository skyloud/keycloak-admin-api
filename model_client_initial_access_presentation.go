/*
Keycloak Admin REST API

This is a REST API reference for the Keycloak Admin REST API.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ClientInitialAccessPresentation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClientInitialAccessPresentation{}

// ClientInitialAccessPresentation struct for ClientInitialAccessPresentation
type ClientInitialAccessPresentation struct {
	Id             *string `json:"id,omitempty"`
	Token          *string `json:"token,omitempty"`
	Timestamp      *int32  `json:"timestamp,omitempty"`
	Expiration     *int32  `json:"expiration,omitempty"`
	Count          *int32  `json:"count,omitempty"`
	RemainingCount *int32  `json:"remainingCount,omitempty"`
}

// NewClientInitialAccessPresentation instantiates a new ClientInitialAccessPresentation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientInitialAccessPresentation() *ClientInitialAccessPresentation {
	this := ClientInitialAccessPresentation{}
	return &this
}

// NewClientInitialAccessPresentationWithDefaults instantiates a new ClientInitialAccessPresentation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientInitialAccessPresentationWithDefaults() *ClientInitialAccessPresentation {
	this := ClientInitialAccessPresentation{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ClientInitialAccessPresentation) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientInitialAccessPresentation) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ClientInitialAccessPresentation) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ClientInitialAccessPresentation) SetId(v string) {
	o.Id = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *ClientInitialAccessPresentation) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientInitialAccessPresentation) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *ClientInitialAccessPresentation) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *ClientInitialAccessPresentation) SetToken(v string) {
	o.Token = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *ClientInitialAccessPresentation) GetTimestamp() int32 {
	if o == nil || IsNil(o.Timestamp) {
		var ret int32
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientInitialAccessPresentation) GetTimestampOk() (*int32, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *ClientInitialAccessPresentation) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given int32 and assigns it to the Timestamp field.
func (o *ClientInitialAccessPresentation) SetTimestamp(v int32) {
	o.Timestamp = &v
}

// GetExpiration returns the Expiration field value if set, zero value otherwise.
func (o *ClientInitialAccessPresentation) GetExpiration() int32 {
	if o == nil || IsNil(o.Expiration) {
		var ret int32
		return ret
	}
	return *o.Expiration
}

// GetExpirationOk returns a tuple with the Expiration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientInitialAccessPresentation) GetExpirationOk() (*int32, bool) {
	if o == nil || IsNil(o.Expiration) {
		return nil, false
	}
	return o.Expiration, true
}

// HasExpiration returns a boolean if a field has been set.
func (o *ClientInitialAccessPresentation) HasExpiration() bool {
	if o != nil && !IsNil(o.Expiration) {
		return true
	}

	return false
}

// SetExpiration gets a reference to the given int32 and assigns it to the Expiration field.
func (o *ClientInitialAccessPresentation) SetExpiration(v int32) {
	o.Expiration = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *ClientInitialAccessPresentation) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientInitialAccessPresentation) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *ClientInitialAccessPresentation) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *ClientInitialAccessPresentation) SetCount(v int32) {
	o.Count = &v
}

// GetRemainingCount returns the RemainingCount field value if set, zero value otherwise.
func (o *ClientInitialAccessPresentation) GetRemainingCount() int32 {
	if o == nil || IsNil(o.RemainingCount) {
		var ret int32
		return ret
	}
	return *o.RemainingCount
}

// GetRemainingCountOk returns a tuple with the RemainingCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientInitialAccessPresentation) GetRemainingCountOk() (*int32, bool) {
	if o == nil || IsNil(o.RemainingCount) {
		return nil, false
	}
	return o.RemainingCount, true
}

// HasRemainingCount returns a boolean if a field has been set.
func (o *ClientInitialAccessPresentation) HasRemainingCount() bool {
	if o != nil && !IsNil(o.RemainingCount) {
		return true
	}

	return false
}

// SetRemainingCount gets a reference to the given int32 and assigns it to the RemainingCount field.
func (o *ClientInitialAccessPresentation) SetRemainingCount(v int32) {
	o.RemainingCount = &v
}

func (o ClientInitialAccessPresentation) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientInitialAccessPresentation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.Expiration) {
		toSerialize["expiration"] = o.Expiration
	}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.RemainingCount) {
		toSerialize["remainingCount"] = o.RemainingCount
	}
	return toSerialize, nil
}

type NullableClientInitialAccessPresentation struct {
	value *ClientInitialAccessPresentation
	isSet bool
}

func (v NullableClientInitialAccessPresentation) Get() *ClientInitialAccessPresentation {
	return v.value
}

func (v *NullableClientInitialAccessPresentation) Set(val *ClientInitialAccessPresentation) {
	v.value = val
	v.isSet = true
}

func (v NullableClientInitialAccessPresentation) IsSet() bool {
	return v.isSet
}

func (v *NullableClientInitialAccessPresentation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientInitialAccessPresentation(val *ClientInitialAccessPresentation) *NullableClientInitialAccessPresentation {
	return &NullableClientInitialAccessPresentation{value: val, isSet: true}
}

func (v NullableClientInitialAccessPresentation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientInitialAccessPresentation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
